
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model empresas
 * 
 */
export type empresas = $Result.DefaultSelection<Prisma.$empresasPayload>
/**
 * Model prospectos
 * 
 */
export type prospectos = $Result.DefaultSelection<Prisma.$prospectosPayload>
/**
 * Model servicios
 * 
 */
export type servicios = $Result.DefaultSelection<Prisma.$serviciosPayload>
/**
 * Model usuarios
 * 
 */
export type usuarios = $Result.DefaultSelection<Prisma.$usuariosPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const prospectos_status: {
  nuevo: 'nuevo',
  en_proceso: 'en_proceso',
  contactado: 'contactado',
  cerrado: 'cerrado'
};

export type prospectos_status = (typeof prospectos_status)[keyof typeof prospectos_status]

}

export type prospectos_status = $Enums.prospectos_status

export const prospectos_status: typeof $Enums.prospectos_status

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Empresas
 * const empresas = await prisma.empresas.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Empresas
   * const empresas = await prisma.empresas.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.empresas`: Exposes CRUD operations for the **empresas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Empresas
    * const empresas = await prisma.empresas.findMany()
    * ```
    */
  get empresas(): Prisma.empresasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.prospectos`: Exposes CRUD operations for the **prospectos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Prospectos
    * const prospectos = await prisma.prospectos.findMany()
    * ```
    */
  get prospectos(): Prisma.prospectosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.servicios`: Exposes CRUD operations for the **servicios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Servicios
    * const servicios = await prisma.servicios.findMany()
    * ```
    */
  get servicios(): Prisma.serviciosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuarios`: Exposes CRUD operations for the **usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuarios.findMany()
    * ```
    */
  get usuarios(): Prisma.usuariosDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.10.1
   * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    empresas: 'empresas',
    prospectos: 'prospectos',
    servicios: 'servicios',
    usuarios: 'usuarios'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "empresas" | "prospectos" | "servicios" | "usuarios"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      empresas: {
        payload: Prisma.$empresasPayload<ExtArgs>
        fields: Prisma.empresasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.empresasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empresasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.empresasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empresasPayload>
          }
          findFirst: {
            args: Prisma.empresasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empresasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.empresasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empresasPayload>
          }
          findMany: {
            args: Prisma.empresasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empresasPayload>[]
          }
          create: {
            args: Prisma.empresasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empresasPayload>
          }
          createMany: {
            args: Prisma.empresasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.empresasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empresasPayload>
          }
          update: {
            args: Prisma.empresasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empresasPayload>
          }
          deleteMany: {
            args: Prisma.empresasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.empresasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.empresasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$empresasPayload>
          }
          aggregate: {
            args: Prisma.EmpresasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmpresas>
          }
          groupBy: {
            args: Prisma.empresasGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmpresasGroupByOutputType>[]
          }
          count: {
            args: Prisma.empresasCountArgs<ExtArgs>
            result: $Utils.Optional<EmpresasCountAggregateOutputType> | number
          }
        }
      }
      prospectos: {
        payload: Prisma.$prospectosPayload<ExtArgs>
        fields: Prisma.prospectosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.prospectosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$prospectosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.prospectosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$prospectosPayload>
          }
          findFirst: {
            args: Prisma.prospectosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$prospectosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.prospectosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$prospectosPayload>
          }
          findMany: {
            args: Prisma.prospectosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$prospectosPayload>[]
          }
          create: {
            args: Prisma.prospectosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$prospectosPayload>
          }
          createMany: {
            args: Prisma.prospectosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.prospectosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$prospectosPayload>
          }
          update: {
            args: Prisma.prospectosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$prospectosPayload>
          }
          deleteMany: {
            args: Prisma.prospectosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.prospectosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.prospectosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$prospectosPayload>
          }
          aggregate: {
            args: Prisma.ProspectosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProspectos>
          }
          groupBy: {
            args: Prisma.prospectosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProspectosGroupByOutputType>[]
          }
          count: {
            args: Prisma.prospectosCountArgs<ExtArgs>
            result: $Utils.Optional<ProspectosCountAggregateOutputType> | number
          }
        }
      }
      servicios: {
        payload: Prisma.$serviciosPayload<ExtArgs>
        fields: Prisma.serviciosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.serviciosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.serviciosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>
          }
          findFirst: {
            args: Prisma.serviciosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.serviciosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>
          }
          findMany: {
            args: Prisma.serviciosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>[]
          }
          create: {
            args: Prisma.serviciosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>
          }
          createMany: {
            args: Prisma.serviciosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.serviciosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>
          }
          update: {
            args: Prisma.serviciosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>
          }
          deleteMany: {
            args: Prisma.serviciosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.serviciosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.serviciosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$serviciosPayload>
          }
          aggregate: {
            args: Prisma.ServiciosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServicios>
          }
          groupBy: {
            args: Prisma.serviciosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServiciosGroupByOutputType>[]
          }
          count: {
            args: Prisma.serviciosCountArgs<ExtArgs>
            result: $Utils.Optional<ServiciosCountAggregateOutputType> | number
          }
        }
      }
      usuarios: {
        payload: Prisma.$usuariosPayload<ExtArgs>
        fields: Prisma.usuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findFirst: {
            args: Prisma.usuariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findMany: {
            args: Prisma.usuariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          create: {
            args: Prisma.usuariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          createMany: {
            args: Prisma.usuariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.usuariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          update: {
            args: Prisma.usuariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          deleteMany: {
            args: Prisma.usuariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usuariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.usuariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          aggregate: {
            args: Prisma.UsuariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarios>
          }
          groupBy: {
            args: Prisma.usuariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuariosCountArgs<ExtArgs>
            result: $Utils.Optional<UsuariosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    empresas?: empresasOmit
    prospectos?: prospectosOmit
    servicios?: serviciosOmit
    usuarios?: usuariosOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type EmpresasCountOutputType
   */

  export type EmpresasCountOutputType = {
    prospectos: number
    servicios: number
  }

  export type EmpresasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    prospectos?: boolean | EmpresasCountOutputTypeCountProspectosArgs
    servicios?: boolean | EmpresasCountOutputTypeCountServiciosArgs
  }

  // Custom InputTypes
  /**
   * EmpresasCountOutputType without action
   */
  export type EmpresasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmpresasCountOutputType
     */
    select?: EmpresasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmpresasCountOutputType without action
   */
  export type EmpresasCountOutputTypeCountProspectosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: prospectosWhereInput
  }

  /**
   * EmpresasCountOutputType without action
   */
  export type EmpresasCountOutputTypeCountServiciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: serviciosWhereInput
  }


  /**
   * Count Type UsuariosCountOutputType
   */

  export type UsuariosCountOutputType = {
    empresas: number
  }

  export type UsuariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empresas?: boolean | UsuariosCountOutputTypeCountEmpresasArgs
  }

  // Custom InputTypes
  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuariosCountOutputType
     */
    select?: UsuariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountEmpresasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: empresasWhereInput
  }


  /**
   * Models
   */

  /**
   * Model empresas
   */

  export type AggregateEmpresas = {
    _count: EmpresasCountAggregateOutputType | null
    _avg: EmpresasAvgAggregateOutputType | null
    _sum: EmpresasSumAggregateOutputType | null
    _min: EmpresasMinAggregateOutputType | null
    _max: EmpresasMaxAggregateOutputType | null
  }

  export type EmpresasAvgAggregateOutputType = {
    id: number | null
    usuario_id: number | null
  }

  export type EmpresasSumAggregateOutputType = {
    id: number | null
    usuario_id: number | null
  }

  export type EmpresasMinAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    nombre: string | null
    descripcion: string | null
    logo_url: string | null
    banner_url: string | null
    telefono_contacto: string | null
    correo_contacto: string | null
    direccion: string | null
    redes_sociales: string | null
    sitio_web: string | null
    creado_en: Date | null
  }

  export type EmpresasMaxAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    nombre: string | null
    descripcion: string | null
    logo_url: string | null
    banner_url: string | null
    telefono_contacto: string | null
    correo_contacto: string | null
    direccion: string | null
    redes_sociales: string | null
    sitio_web: string | null
    creado_en: Date | null
  }

  export type EmpresasCountAggregateOutputType = {
    id: number
    usuario_id: number
    nombre: number
    descripcion: number
    logo_url: number
    banner_url: number
    telefono_contacto: number
    correo_contacto: number
    direccion: number
    redes_sociales: number
    sitio_web: number
    creado_en: number
    _all: number
  }


  export type EmpresasAvgAggregateInputType = {
    id?: true
    usuario_id?: true
  }

  export type EmpresasSumAggregateInputType = {
    id?: true
    usuario_id?: true
  }

  export type EmpresasMinAggregateInputType = {
    id?: true
    usuario_id?: true
    nombre?: true
    descripcion?: true
    logo_url?: true
    banner_url?: true
    telefono_contacto?: true
    correo_contacto?: true
    direccion?: true
    redes_sociales?: true
    sitio_web?: true
    creado_en?: true
  }

  export type EmpresasMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    nombre?: true
    descripcion?: true
    logo_url?: true
    banner_url?: true
    telefono_contacto?: true
    correo_contacto?: true
    direccion?: true
    redes_sociales?: true
    sitio_web?: true
    creado_en?: true
  }

  export type EmpresasCountAggregateInputType = {
    id?: true
    usuario_id?: true
    nombre?: true
    descripcion?: true
    logo_url?: true
    banner_url?: true
    telefono_contacto?: true
    correo_contacto?: true
    direccion?: true
    redes_sociales?: true
    sitio_web?: true
    creado_en?: true
    _all?: true
  }

  export type EmpresasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which empresas to aggregate.
     */
    where?: empresasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of empresas to fetch.
     */
    orderBy?: empresasOrderByWithRelationInput | empresasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: empresasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` empresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned empresas
    **/
    _count?: true | EmpresasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmpresasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmpresasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmpresasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmpresasMaxAggregateInputType
  }

  export type GetEmpresasAggregateType<T extends EmpresasAggregateArgs> = {
        [P in keyof T & keyof AggregateEmpresas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmpresas[P]>
      : GetScalarType<T[P], AggregateEmpresas[P]>
  }




  export type empresasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: empresasWhereInput
    orderBy?: empresasOrderByWithAggregationInput | empresasOrderByWithAggregationInput[]
    by: EmpresasScalarFieldEnum[] | EmpresasScalarFieldEnum
    having?: empresasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmpresasCountAggregateInputType | true
    _avg?: EmpresasAvgAggregateInputType
    _sum?: EmpresasSumAggregateInputType
    _min?: EmpresasMinAggregateInputType
    _max?: EmpresasMaxAggregateInputType
  }

  export type EmpresasGroupByOutputType = {
    id: number
    usuario_id: number
    nombre: string
    descripcion: string | null
    logo_url: string | null
    banner_url: string | null
    telefono_contacto: string | null
    correo_contacto: string | null
    direccion: string | null
    redes_sociales: string | null
    sitio_web: string | null
    creado_en: Date | null
    _count: EmpresasCountAggregateOutputType | null
    _avg: EmpresasAvgAggregateOutputType | null
    _sum: EmpresasSumAggregateOutputType | null
    _min: EmpresasMinAggregateOutputType | null
    _max: EmpresasMaxAggregateOutputType | null
  }

  type GetEmpresasGroupByPayload<T extends empresasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmpresasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmpresasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmpresasGroupByOutputType[P]>
            : GetScalarType<T[P], EmpresasGroupByOutputType[P]>
        }
      >
    >


  export type empresasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    nombre?: boolean
    descripcion?: boolean
    logo_url?: boolean
    banner_url?: boolean
    telefono_contacto?: boolean
    correo_contacto?: boolean
    direccion?: boolean
    redes_sociales?: boolean
    sitio_web?: boolean
    creado_en?: boolean
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
    prospectos?: boolean | empresas$prospectosArgs<ExtArgs>
    servicios?: boolean | empresas$serviciosArgs<ExtArgs>
    _count?: boolean | EmpresasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empresas"]>



  export type empresasSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    nombre?: boolean
    descripcion?: boolean
    logo_url?: boolean
    banner_url?: boolean
    telefono_contacto?: boolean
    correo_contacto?: boolean
    direccion?: boolean
    redes_sociales?: boolean
    sitio_web?: boolean
    creado_en?: boolean
  }

  export type empresasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "nombre" | "descripcion" | "logo_url" | "banner_url" | "telefono_contacto" | "correo_contacto" | "direccion" | "redes_sociales" | "sitio_web" | "creado_en", ExtArgs["result"]["empresas"]>
  export type empresasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | usuariosDefaultArgs<ExtArgs>
    prospectos?: boolean | empresas$prospectosArgs<ExtArgs>
    servicios?: boolean | empresas$serviciosArgs<ExtArgs>
    _count?: boolean | EmpresasCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $empresasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "empresas"
    objects: {
      usuarios: Prisma.$usuariosPayload<ExtArgs>
      prospectos: Prisma.$prospectosPayload<ExtArgs>[]
      servicios: Prisma.$serviciosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuario_id: number
      nombre: string
      descripcion: string | null
      logo_url: string | null
      banner_url: string | null
      telefono_contacto: string | null
      correo_contacto: string | null
      direccion: string | null
      redes_sociales: string | null
      sitio_web: string | null
      creado_en: Date | null
    }, ExtArgs["result"]["empresas"]>
    composites: {}
  }

  type empresasGetPayload<S extends boolean | null | undefined | empresasDefaultArgs> = $Result.GetResult<Prisma.$empresasPayload, S>

  type empresasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<empresasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmpresasCountAggregateInputType | true
    }

  export interface empresasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['empresas'], meta: { name: 'empresas' } }
    /**
     * Find zero or one Empresas that matches the filter.
     * @param {empresasFindUniqueArgs} args - Arguments to find a Empresas
     * @example
     * // Get one Empresas
     * const empresas = await prisma.empresas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends empresasFindUniqueArgs>(args: SelectSubset<T, empresasFindUniqueArgs<ExtArgs>>): Prisma__empresasClient<$Result.GetResult<Prisma.$empresasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Empresas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {empresasFindUniqueOrThrowArgs} args - Arguments to find a Empresas
     * @example
     * // Get one Empresas
     * const empresas = await prisma.empresas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends empresasFindUniqueOrThrowArgs>(args: SelectSubset<T, empresasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__empresasClient<$Result.GetResult<Prisma.$empresasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empresas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empresasFindFirstArgs} args - Arguments to find a Empresas
     * @example
     * // Get one Empresas
     * const empresas = await prisma.empresas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends empresasFindFirstArgs>(args?: SelectSubset<T, empresasFindFirstArgs<ExtArgs>>): Prisma__empresasClient<$Result.GetResult<Prisma.$empresasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empresas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empresasFindFirstOrThrowArgs} args - Arguments to find a Empresas
     * @example
     * // Get one Empresas
     * const empresas = await prisma.empresas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends empresasFindFirstOrThrowArgs>(args?: SelectSubset<T, empresasFindFirstOrThrowArgs<ExtArgs>>): Prisma__empresasClient<$Result.GetResult<Prisma.$empresasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Empresas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empresasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Empresas
     * const empresas = await prisma.empresas.findMany()
     * 
     * // Get first 10 Empresas
     * const empresas = await prisma.empresas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const empresasWithIdOnly = await prisma.empresas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends empresasFindManyArgs>(args?: SelectSubset<T, empresasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$empresasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Empresas.
     * @param {empresasCreateArgs} args - Arguments to create a Empresas.
     * @example
     * // Create one Empresas
     * const Empresas = await prisma.empresas.create({
     *   data: {
     *     // ... data to create a Empresas
     *   }
     * })
     * 
     */
    create<T extends empresasCreateArgs>(args: SelectSubset<T, empresasCreateArgs<ExtArgs>>): Prisma__empresasClient<$Result.GetResult<Prisma.$empresasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Empresas.
     * @param {empresasCreateManyArgs} args - Arguments to create many Empresas.
     * @example
     * // Create many Empresas
     * const empresas = await prisma.empresas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends empresasCreateManyArgs>(args?: SelectSubset<T, empresasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Empresas.
     * @param {empresasDeleteArgs} args - Arguments to delete one Empresas.
     * @example
     * // Delete one Empresas
     * const Empresas = await prisma.empresas.delete({
     *   where: {
     *     // ... filter to delete one Empresas
     *   }
     * })
     * 
     */
    delete<T extends empresasDeleteArgs>(args: SelectSubset<T, empresasDeleteArgs<ExtArgs>>): Prisma__empresasClient<$Result.GetResult<Prisma.$empresasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Empresas.
     * @param {empresasUpdateArgs} args - Arguments to update one Empresas.
     * @example
     * // Update one Empresas
     * const empresas = await prisma.empresas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends empresasUpdateArgs>(args: SelectSubset<T, empresasUpdateArgs<ExtArgs>>): Prisma__empresasClient<$Result.GetResult<Prisma.$empresasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Empresas.
     * @param {empresasDeleteManyArgs} args - Arguments to filter Empresas to delete.
     * @example
     * // Delete a few Empresas
     * const { count } = await prisma.empresas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends empresasDeleteManyArgs>(args?: SelectSubset<T, empresasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Empresas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empresasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Empresas
     * const empresas = await prisma.empresas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends empresasUpdateManyArgs>(args: SelectSubset<T, empresasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Empresas.
     * @param {empresasUpsertArgs} args - Arguments to update or create a Empresas.
     * @example
     * // Update or create a Empresas
     * const empresas = await prisma.empresas.upsert({
     *   create: {
     *     // ... data to create a Empresas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Empresas we want to update
     *   }
     * })
     */
    upsert<T extends empresasUpsertArgs>(args: SelectSubset<T, empresasUpsertArgs<ExtArgs>>): Prisma__empresasClient<$Result.GetResult<Prisma.$empresasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Empresas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empresasCountArgs} args - Arguments to filter Empresas to count.
     * @example
     * // Count the number of Empresas
     * const count = await prisma.empresas.count({
     *   where: {
     *     // ... the filter for the Empresas we want to count
     *   }
     * })
    **/
    count<T extends empresasCountArgs>(
      args?: Subset<T, empresasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmpresasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Empresas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmpresasAggregateArgs>(args: Subset<T, EmpresasAggregateArgs>): Prisma.PrismaPromise<GetEmpresasAggregateType<T>>

    /**
     * Group by Empresas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {empresasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends empresasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: empresasGroupByArgs['orderBy'] }
        : { orderBy?: empresasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, empresasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmpresasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the empresas model
   */
  readonly fields: empresasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for empresas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__empresasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    prospectos<T extends empresas$prospectosArgs<ExtArgs> = {}>(args?: Subset<T, empresas$prospectosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$prospectosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    servicios<T extends empresas$serviciosArgs<ExtArgs> = {}>(args?: Subset<T, empresas$serviciosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the empresas model
   */
  interface empresasFieldRefs {
    readonly id: FieldRef<"empresas", 'Int'>
    readonly usuario_id: FieldRef<"empresas", 'Int'>
    readonly nombre: FieldRef<"empresas", 'String'>
    readonly descripcion: FieldRef<"empresas", 'String'>
    readonly logo_url: FieldRef<"empresas", 'String'>
    readonly banner_url: FieldRef<"empresas", 'String'>
    readonly telefono_contacto: FieldRef<"empresas", 'String'>
    readonly correo_contacto: FieldRef<"empresas", 'String'>
    readonly direccion: FieldRef<"empresas", 'String'>
    readonly redes_sociales: FieldRef<"empresas", 'String'>
    readonly sitio_web: FieldRef<"empresas", 'String'>
    readonly creado_en: FieldRef<"empresas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * empresas findUnique
   */
  export type empresasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empresas
     */
    select?: empresasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empresas
     */
    omit?: empresasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empresasInclude<ExtArgs> | null
    /**
     * Filter, which empresas to fetch.
     */
    where: empresasWhereUniqueInput
  }

  /**
   * empresas findUniqueOrThrow
   */
  export type empresasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empresas
     */
    select?: empresasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empresas
     */
    omit?: empresasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empresasInclude<ExtArgs> | null
    /**
     * Filter, which empresas to fetch.
     */
    where: empresasWhereUniqueInput
  }

  /**
   * empresas findFirst
   */
  export type empresasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empresas
     */
    select?: empresasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empresas
     */
    omit?: empresasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empresasInclude<ExtArgs> | null
    /**
     * Filter, which empresas to fetch.
     */
    where?: empresasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of empresas to fetch.
     */
    orderBy?: empresasOrderByWithRelationInput | empresasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for empresas.
     */
    cursor?: empresasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` empresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of empresas.
     */
    distinct?: EmpresasScalarFieldEnum | EmpresasScalarFieldEnum[]
  }

  /**
   * empresas findFirstOrThrow
   */
  export type empresasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empresas
     */
    select?: empresasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empresas
     */
    omit?: empresasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empresasInclude<ExtArgs> | null
    /**
     * Filter, which empresas to fetch.
     */
    where?: empresasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of empresas to fetch.
     */
    orderBy?: empresasOrderByWithRelationInput | empresasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for empresas.
     */
    cursor?: empresasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` empresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of empresas.
     */
    distinct?: EmpresasScalarFieldEnum | EmpresasScalarFieldEnum[]
  }

  /**
   * empresas findMany
   */
  export type empresasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empresas
     */
    select?: empresasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empresas
     */
    omit?: empresasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empresasInclude<ExtArgs> | null
    /**
     * Filter, which empresas to fetch.
     */
    where?: empresasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of empresas to fetch.
     */
    orderBy?: empresasOrderByWithRelationInput | empresasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing empresas.
     */
    cursor?: empresasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` empresas.
     */
    skip?: number
    distinct?: EmpresasScalarFieldEnum | EmpresasScalarFieldEnum[]
  }

  /**
   * empresas create
   */
  export type empresasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empresas
     */
    select?: empresasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empresas
     */
    omit?: empresasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empresasInclude<ExtArgs> | null
    /**
     * The data needed to create a empresas.
     */
    data: XOR<empresasCreateInput, empresasUncheckedCreateInput>
  }

  /**
   * empresas createMany
   */
  export type empresasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many empresas.
     */
    data: empresasCreateManyInput | empresasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * empresas update
   */
  export type empresasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empresas
     */
    select?: empresasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empresas
     */
    omit?: empresasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empresasInclude<ExtArgs> | null
    /**
     * The data needed to update a empresas.
     */
    data: XOR<empresasUpdateInput, empresasUncheckedUpdateInput>
    /**
     * Choose, which empresas to update.
     */
    where: empresasWhereUniqueInput
  }

  /**
   * empresas updateMany
   */
  export type empresasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update empresas.
     */
    data: XOR<empresasUpdateManyMutationInput, empresasUncheckedUpdateManyInput>
    /**
     * Filter which empresas to update
     */
    where?: empresasWhereInput
    /**
     * Limit how many empresas to update.
     */
    limit?: number
  }

  /**
   * empresas upsert
   */
  export type empresasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empresas
     */
    select?: empresasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empresas
     */
    omit?: empresasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empresasInclude<ExtArgs> | null
    /**
     * The filter to search for the empresas to update in case it exists.
     */
    where: empresasWhereUniqueInput
    /**
     * In case the empresas found by the `where` argument doesn't exist, create a new empresas with this data.
     */
    create: XOR<empresasCreateInput, empresasUncheckedCreateInput>
    /**
     * In case the empresas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<empresasUpdateInput, empresasUncheckedUpdateInput>
  }

  /**
   * empresas delete
   */
  export type empresasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empresas
     */
    select?: empresasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empresas
     */
    omit?: empresasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empresasInclude<ExtArgs> | null
    /**
     * Filter which empresas to delete.
     */
    where: empresasWhereUniqueInput
  }

  /**
   * empresas deleteMany
   */
  export type empresasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which empresas to delete
     */
    where?: empresasWhereInput
    /**
     * Limit how many empresas to delete.
     */
    limit?: number
  }

  /**
   * empresas.prospectos
   */
  export type empresas$prospectosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the prospectos
     */
    select?: prospectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the prospectos
     */
    omit?: prospectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: prospectosInclude<ExtArgs> | null
    where?: prospectosWhereInput
    orderBy?: prospectosOrderByWithRelationInput | prospectosOrderByWithRelationInput[]
    cursor?: prospectosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProspectosScalarFieldEnum | ProspectosScalarFieldEnum[]
  }

  /**
   * empresas.servicios
   */
  export type empresas$serviciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    where?: serviciosWhereInput
    orderBy?: serviciosOrderByWithRelationInput | serviciosOrderByWithRelationInput[]
    cursor?: serviciosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiciosScalarFieldEnum | ServiciosScalarFieldEnum[]
  }

  /**
   * empresas without action
   */
  export type empresasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empresas
     */
    select?: empresasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empresas
     */
    omit?: empresasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empresasInclude<ExtArgs> | null
  }


  /**
   * Model prospectos
   */

  export type AggregateProspectos = {
    _count: ProspectosCountAggregateOutputType | null
    _avg: ProspectosAvgAggregateOutputType | null
    _sum: ProspectosSumAggregateOutputType | null
    _min: ProspectosMinAggregateOutputType | null
    _max: ProspectosMaxAggregateOutputType | null
  }

  export type ProspectosAvgAggregateOutputType = {
    id: number | null
    empresa_id: number | null
    integrantes: number | null
  }

  export type ProspectosSumAggregateOutputType = {
    id: number | null
    empresa_id: number | null
    integrantes: number | null
  }

  export type ProspectosMinAggregateOutputType = {
    id: number | null
    empresa_id: number | null
    nombre: string | null
    correo: string | null
    telefono: string | null
    status: $Enums.prospectos_status | null
    comentarios: string | null
    integrantes: number | null
    creado_en: Date | null
  }

  export type ProspectosMaxAggregateOutputType = {
    id: number | null
    empresa_id: number | null
    nombre: string | null
    correo: string | null
    telefono: string | null
    status: $Enums.prospectos_status | null
    comentarios: string | null
    integrantes: number | null
    creado_en: Date | null
  }

  export type ProspectosCountAggregateOutputType = {
    id: number
    empresa_id: number
    nombre: number
    correo: number
    telefono: number
    status: number
    comentarios: number
    integrantes: number
    creado_en: number
    _all: number
  }


  export type ProspectosAvgAggregateInputType = {
    id?: true
    empresa_id?: true
    integrantes?: true
  }

  export type ProspectosSumAggregateInputType = {
    id?: true
    empresa_id?: true
    integrantes?: true
  }

  export type ProspectosMinAggregateInputType = {
    id?: true
    empresa_id?: true
    nombre?: true
    correo?: true
    telefono?: true
    status?: true
    comentarios?: true
    integrantes?: true
    creado_en?: true
  }

  export type ProspectosMaxAggregateInputType = {
    id?: true
    empresa_id?: true
    nombre?: true
    correo?: true
    telefono?: true
    status?: true
    comentarios?: true
    integrantes?: true
    creado_en?: true
  }

  export type ProspectosCountAggregateInputType = {
    id?: true
    empresa_id?: true
    nombre?: true
    correo?: true
    telefono?: true
    status?: true
    comentarios?: true
    integrantes?: true
    creado_en?: true
    _all?: true
  }

  export type ProspectosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which prospectos to aggregate.
     */
    where?: prospectosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of prospectos to fetch.
     */
    orderBy?: prospectosOrderByWithRelationInput | prospectosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: prospectosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` prospectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` prospectos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned prospectos
    **/
    _count?: true | ProspectosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProspectosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProspectosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProspectosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProspectosMaxAggregateInputType
  }

  export type GetProspectosAggregateType<T extends ProspectosAggregateArgs> = {
        [P in keyof T & keyof AggregateProspectos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProspectos[P]>
      : GetScalarType<T[P], AggregateProspectos[P]>
  }




  export type prospectosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: prospectosWhereInput
    orderBy?: prospectosOrderByWithAggregationInput | prospectosOrderByWithAggregationInput[]
    by: ProspectosScalarFieldEnum[] | ProspectosScalarFieldEnum
    having?: prospectosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProspectosCountAggregateInputType | true
    _avg?: ProspectosAvgAggregateInputType
    _sum?: ProspectosSumAggregateInputType
    _min?: ProspectosMinAggregateInputType
    _max?: ProspectosMaxAggregateInputType
  }

  export type ProspectosGroupByOutputType = {
    id: number
    empresa_id: number
    nombre: string
    correo: string | null
    telefono: string | null
    status: $Enums.prospectos_status | null
    comentarios: string | null
    integrantes: number | null
    creado_en: Date | null
    _count: ProspectosCountAggregateOutputType | null
    _avg: ProspectosAvgAggregateOutputType | null
    _sum: ProspectosSumAggregateOutputType | null
    _min: ProspectosMinAggregateOutputType | null
    _max: ProspectosMaxAggregateOutputType | null
  }

  type GetProspectosGroupByPayload<T extends prospectosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProspectosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProspectosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProspectosGroupByOutputType[P]>
            : GetScalarType<T[P], ProspectosGroupByOutputType[P]>
        }
      >
    >


  export type prospectosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empresa_id?: boolean
    nombre?: boolean
    correo?: boolean
    telefono?: boolean
    status?: boolean
    comentarios?: boolean
    integrantes?: boolean
    creado_en?: boolean
    empresas?: boolean | empresasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["prospectos"]>



  export type prospectosSelectScalar = {
    id?: boolean
    empresa_id?: boolean
    nombre?: boolean
    correo?: boolean
    telefono?: boolean
    status?: boolean
    comentarios?: boolean
    integrantes?: boolean
    creado_en?: boolean
  }

  export type prospectosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "empresa_id" | "nombre" | "correo" | "telefono" | "status" | "comentarios" | "integrantes" | "creado_en", ExtArgs["result"]["prospectos"]>
  export type prospectosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empresas?: boolean | empresasDefaultArgs<ExtArgs>
  }

  export type $prospectosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "prospectos"
    objects: {
      empresas: Prisma.$empresasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      empresa_id: number
      nombre: string
      correo: string | null
      telefono: string | null
      status: $Enums.prospectos_status | null
      comentarios: string | null
      integrantes: number | null
      creado_en: Date | null
    }, ExtArgs["result"]["prospectos"]>
    composites: {}
  }

  type prospectosGetPayload<S extends boolean | null | undefined | prospectosDefaultArgs> = $Result.GetResult<Prisma.$prospectosPayload, S>

  type prospectosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<prospectosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProspectosCountAggregateInputType | true
    }

  export interface prospectosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['prospectos'], meta: { name: 'prospectos' } }
    /**
     * Find zero or one Prospectos that matches the filter.
     * @param {prospectosFindUniqueArgs} args - Arguments to find a Prospectos
     * @example
     * // Get one Prospectos
     * const prospectos = await prisma.prospectos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends prospectosFindUniqueArgs>(args: SelectSubset<T, prospectosFindUniqueArgs<ExtArgs>>): Prisma__prospectosClient<$Result.GetResult<Prisma.$prospectosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Prospectos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {prospectosFindUniqueOrThrowArgs} args - Arguments to find a Prospectos
     * @example
     * // Get one Prospectos
     * const prospectos = await prisma.prospectos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends prospectosFindUniqueOrThrowArgs>(args: SelectSubset<T, prospectosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__prospectosClient<$Result.GetResult<Prisma.$prospectosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Prospectos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {prospectosFindFirstArgs} args - Arguments to find a Prospectos
     * @example
     * // Get one Prospectos
     * const prospectos = await prisma.prospectos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends prospectosFindFirstArgs>(args?: SelectSubset<T, prospectosFindFirstArgs<ExtArgs>>): Prisma__prospectosClient<$Result.GetResult<Prisma.$prospectosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Prospectos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {prospectosFindFirstOrThrowArgs} args - Arguments to find a Prospectos
     * @example
     * // Get one Prospectos
     * const prospectos = await prisma.prospectos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends prospectosFindFirstOrThrowArgs>(args?: SelectSubset<T, prospectosFindFirstOrThrowArgs<ExtArgs>>): Prisma__prospectosClient<$Result.GetResult<Prisma.$prospectosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Prospectos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {prospectosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Prospectos
     * const prospectos = await prisma.prospectos.findMany()
     * 
     * // Get first 10 Prospectos
     * const prospectos = await prisma.prospectos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const prospectosWithIdOnly = await prisma.prospectos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends prospectosFindManyArgs>(args?: SelectSubset<T, prospectosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$prospectosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Prospectos.
     * @param {prospectosCreateArgs} args - Arguments to create a Prospectos.
     * @example
     * // Create one Prospectos
     * const Prospectos = await prisma.prospectos.create({
     *   data: {
     *     // ... data to create a Prospectos
     *   }
     * })
     * 
     */
    create<T extends prospectosCreateArgs>(args: SelectSubset<T, prospectosCreateArgs<ExtArgs>>): Prisma__prospectosClient<$Result.GetResult<Prisma.$prospectosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Prospectos.
     * @param {prospectosCreateManyArgs} args - Arguments to create many Prospectos.
     * @example
     * // Create many Prospectos
     * const prospectos = await prisma.prospectos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends prospectosCreateManyArgs>(args?: SelectSubset<T, prospectosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Prospectos.
     * @param {prospectosDeleteArgs} args - Arguments to delete one Prospectos.
     * @example
     * // Delete one Prospectos
     * const Prospectos = await prisma.prospectos.delete({
     *   where: {
     *     // ... filter to delete one Prospectos
     *   }
     * })
     * 
     */
    delete<T extends prospectosDeleteArgs>(args: SelectSubset<T, prospectosDeleteArgs<ExtArgs>>): Prisma__prospectosClient<$Result.GetResult<Prisma.$prospectosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Prospectos.
     * @param {prospectosUpdateArgs} args - Arguments to update one Prospectos.
     * @example
     * // Update one Prospectos
     * const prospectos = await prisma.prospectos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends prospectosUpdateArgs>(args: SelectSubset<T, prospectosUpdateArgs<ExtArgs>>): Prisma__prospectosClient<$Result.GetResult<Prisma.$prospectosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Prospectos.
     * @param {prospectosDeleteManyArgs} args - Arguments to filter Prospectos to delete.
     * @example
     * // Delete a few Prospectos
     * const { count } = await prisma.prospectos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends prospectosDeleteManyArgs>(args?: SelectSubset<T, prospectosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prospectos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {prospectosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Prospectos
     * const prospectos = await prisma.prospectos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends prospectosUpdateManyArgs>(args: SelectSubset<T, prospectosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Prospectos.
     * @param {prospectosUpsertArgs} args - Arguments to update or create a Prospectos.
     * @example
     * // Update or create a Prospectos
     * const prospectos = await prisma.prospectos.upsert({
     *   create: {
     *     // ... data to create a Prospectos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Prospectos we want to update
     *   }
     * })
     */
    upsert<T extends prospectosUpsertArgs>(args: SelectSubset<T, prospectosUpsertArgs<ExtArgs>>): Prisma__prospectosClient<$Result.GetResult<Prisma.$prospectosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Prospectos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {prospectosCountArgs} args - Arguments to filter Prospectos to count.
     * @example
     * // Count the number of Prospectos
     * const count = await prisma.prospectos.count({
     *   where: {
     *     // ... the filter for the Prospectos we want to count
     *   }
     * })
    **/
    count<T extends prospectosCountArgs>(
      args?: Subset<T, prospectosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProspectosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Prospectos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProspectosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProspectosAggregateArgs>(args: Subset<T, ProspectosAggregateArgs>): Prisma.PrismaPromise<GetProspectosAggregateType<T>>

    /**
     * Group by Prospectos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {prospectosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends prospectosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: prospectosGroupByArgs['orderBy'] }
        : { orderBy?: prospectosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, prospectosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProspectosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the prospectos model
   */
  readonly fields: prospectosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for prospectos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__prospectosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empresas<T extends empresasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, empresasDefaultArgs<ExtArgs>>): Prisma__empresasClient<$Result.GetResult<Prisma.$empresasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the prospectos model
   */
  interface prospectosFieldRefs {
    readonly id: FieldRef<"prospectos", 'Int'>
    readonly empresa_id: FieldRef<"prospectos", 'Int'>
    readonly nombre: FieldRef<"prospectos", 'String'>
    readonly correo: FieldRef<"prospectos", 'String'>
    readonly telefono: FieldRef<"prospectos", 'String'>
    readonly status: FieldRef<"prospectos", 'prospectos_status'>
    readonly comentarios: FieldRef<"prospectos", 'String'>
    readonly integrantes: FieldRef<"prospectos", 'Int'>
    readonly creado_en: FieldRef<"prospectos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * prospectos findUnique
   */
  export type prospectosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the prospectos
     */
    select?: prospectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the prospectos
     */
    omit?: prospectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: prospectosInclude<ExtArgs> | null
    /**
     * Filter, which prospectos to fetch.
     */
    where: prospectosWhereUniqueInput
  }

  /**
   * prospectos findUniqueOrThrow
   */
  export type prospectosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the prospectos
     */
    select?: prospectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the prospectos
     */
    omit?: prospectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: prospectosInclude<ExtArgs> | null
    /**
     * Filter, which prospectos to fetch.
     */
    where: prospectosWhereUniqueInput
  }

  /**
   * prospectos findFirst
   */
  export type prospectosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the prospectos
     */
    select?: prospectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the prospectos
     */
    omit?: prospectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: prospectosInclude<ExtArgs> | null
    /**
     * Filter, which prospectos to fetch.
     */
    where?: prospectosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of prospectos to fetch.
     */
    orderBy?: prospectosOrderByWithRelationInput | prospectosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for prospectos.
     */
    cursor?: prospectosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` prospectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` prospectos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of prospectos.
     */
    distinct?: ProspectosScalarFieldEnum | ProspectosScalarFieldEnum[]
  }

  /**
   * prospectos findFirstOrThrow
   */
  export type prospectosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the prospectos
     */
    select?: prospectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the prospectos
     */
    omit?: prospectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: prospectosInclude<ExtArgs> | null
    /**
     * Filter, which prospectos to fetch.
     */
    where?: prospectosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of prospectos to fetch.
     */
    orderBy?: prospectosOrderByWithRelationInput | prospectosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for prospectos.
     */
    cursor?: prospectosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` prospectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` prospectos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of prospectos.
     */
    distinct?: ProspectosScalarFieldEnum | ProspectosScalarFieldEnum[]
  }

  /**
   * prospectos findMany
   */
  export type prospectosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the prospectos
     */
    select?: prospectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the prospectos
     */
    omit?: prospectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: prospectosInclude<ExtArgs> | null
    /**
     * Filter, which prospectos to fetch.
     */
    where?: prospectosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of prospectos to fetch.
     */
    orderBy?: prospectosOrderByWithRelationInput | prospectosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing prospectos.
     */
    cursor?: prospectosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` prospectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` prospectos.
     */
    skip?: number
    distinct?: ProspectosScalarFieldEnum | ProspectosScalarFieldEnum[]
  }

  /**
   * prospectos create
   */
  export type prospectosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the prospectos
     */
    select?: prospectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the prospectos
     */
    omit?: prospectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: prospectosInclude<ExtArgs> | null
    /**
     * The data needed to create a prospectos.
     */
    data: XOR<prospectosCreateInput, prospectosUncheckedCreateInput>
  }

  /**
   * prospectos createMany
   */
  export type prospectosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many prospectos.
     */
    data: prospectosCreateManyInput | prospectosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * prospectos update
   */
  export type prospectosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the prospectos
     */
    select?: prospectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the prospectos
     */
    omit?: prospectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: prospectosInclude<ExtArgs> | null
    /**
     * The data needed to update a prospectos.
     */
    data: XOR<prospectosUpdateInput, prospectosUncheckedUpdateInput>
    /**
     * Choose, which prospectos to update.
     */
    where: prospectosWhereUniqueInput
  }

  /**
   * prospectos updateMany
   */
  export type prospectosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update prospectos.
     */
    data: XOR<prospectosUpdateManyMutationInput, prospectosUncheckedUpdateManyInput>
    /**
     * Filter which prospectos to update
     */
    where?: prospectosWhereInput
    /**
     * Limit how many prospectos to update.
     */
    limit?: number
  }

  /**
   * prospectos upsert
   */
  export type prospectosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the prospectos
     */
    select?: prospectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the prospectos
     */
    omit?: prospectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: prospectosInclude<ExtArgs> | null
    /**
     * The filter to search for the prospectos to update in case it exists.
     */
    where: prospectosWhereUniqueInput
    /**
     * In case the prospectos found by the `where` argument doesn't exist, create a new prospectos with this data.
     */
    create: XOR<prospectosCreateInput, prospectosUncheckedCreateInput>
    /**
     * In case the prospectos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<prospectosUpdateInput, prospectosUncheckedUpdateInput>
  }

  /**
   * prospectos delete
   */
  export type prospectosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the prospectos
     */
    select?: prospectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the prospectos
     */
    omit?: prospectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: prospectosInclude<ExtArgs> | null
    /**
     * Filter which prospectos to delete.
     */
    where: prospectosWhereUniqueInput
  }

  /**
   * prospectos deleteMany
   */
  export type prospectosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which prospectos to delete
     */
    where?: prospectosWhereInput
    /**
     * Limit how many prospectos to delete.
     */
    limit?: number
  }

  /**
   * prospectos without action
   */
  export type prospectosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the prospectos
     */
    select?: prospectosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the prospectos
     */
    omit?: prospectosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: prospectosInclude<ExtArgs> | null
  }


  /**
   * Model servicios
   */

  export type AggregateServicios = {
    _count: ServiciosCountAggregateOutputType | null
    _avg: ServiciosAvgAggregateOutputType | null
    _sum: ServiciosSumAggregateOutputType | null
    _min: ServiciosMinAggregateOutputType | null
    _max: ServiciosMaxAggregateOutputType | null
  }

  export type ServiciosAvgAggregateOutputType = {
    id: number | null
    empresa_id: number | null
  }

  export type ServiciosSumAggregateOutputType = {
    id: number | null
    empresa_id: number | null
  }

  export type ServiciosMinAggregateOutputType = {
    id: number | null
    empresa_id: number | null
    nombre: string | null
    descripcion: string | null
    imagen_url: string | null
  }

  export type ServiciosMaxAggregateOutputType = {
    id: number | null
    empresa_id: number | null
    nombre: string | null
    descripcion: string | null
    imagen_url: string | null
  }

  export type ServiciosCountAggregateOutputType = {
    id: number
    empresa_id: number
    nombre: number
    descripcion: number
    imagen_url: number
    _all: number
  }


  export type ServiciosAvgAggregateInputType = {
    id?: true
    empresa_id?: true
  }

  export type ServiciosSumAggregateInputType = {
    id?: true
    empresa_id?: true
  }

  export type ServiciosMinAggregateInputType = {
    id?: true
    empresa_id?: true
    nombre?: true
    descripcion?: true
    imagen_url?: true
  }

  export type ServiciosMaxAggregateInputType = {
    id?: true
    empresa_id?: true
    nombre?: true
    descripcion?: true
    imagen_url?: true
  }

  export type ServiciosCountAggregateInputType = {
    id?: true
    empresa_id?: true
    nombre?: true
    descripcion?: true
    imagen_url?: true
    _all?: true
  }

  export type ServiciosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which servicios to aggregate.
     */
    where?: serviciosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicios to fetch.
     */
    orderBy?: serviciosOrderByWithRelationInput | serviciosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: serviciosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned servicios
    **/
    _count?: true | ServiciosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiciosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiciosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiciosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiciosMaxAggregateInputType
  }

  export type GetServiciosAggregateType<T extends ServiciosAggregateArgs> = {
        [P in keyof T & keyof AggregateServicios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServicios[P]>
      : GetScalarType<T[P], AggregateServicios[P]>
  }




  export type serviciosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: serviciosWhereInput
    orderBy?: serviciosOrderByWithAggregationInput | serviciosOrderByWithAggregationInput[]
    by: ServiciosScalarFieldEnum[] | ServiciosScalarFieldEnum
    having?: serviciosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiciosCountAggregateInputType | true
    _avg?: ServiciosAvgAggregateInputType
    _sum?: ServiciosSumAggregateInputType
    _min?: ServiciosMinAggregateInputType
    _max?: ServiciosMaxAggregateInputType
  }

  export type ServiciosGroupByOutputType = {
    id: number
    empresa_id: number
    nombre: string
    descripcion: string | null
    imagen_url: string | null
    _count: ServiciosCountAggregateOutputType | null
    _avg: ServiciosAvgAggregateOutputType | null
    _sum: ServiciosSumAggregateOutputType | null
    _min: ServiciosMinAggregateOutputType | null
    _max: ServiciosMaxAggregateOutputType | null
  }

  type GetServiciosGroupByPayload<T extends serviciosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiciosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiciosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiciosGroupByOutputType[P]>
            : GetScalarType<T[P], ServiciosGroupByOutputType[P]>
        }
      >
    >


  export type serviciosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empresa_id?: boolean
    nombre?: boolean
    descripcion?: boolean
    imagen_url?: boolean
    empresas?: boolean | empresasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["servicios"]>



  export type serviciosSelectScalar = {
    id?: boolean
    empresa_id?: boolean
    nombre?: boolean
    descripcion?: boolean
    imagen_url?: boolean
  }

  export type serviciosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "empresa_id" | "nombre" | "descripcion" | "imagen_url", ExtArgs["result"]["servicios"]>
  export type serviciosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empresas?: boolean | empresasDefaultArgs<ExtArgs>
  }

  export type $serviciosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "servicios"
    objects: {
      empresas: Prisma.$empresasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      empresa_id: number
      nombre: string
      descripcion: string | null
      imagen_url: string | null
    }, ExtArgs["result"]["servicios"]>
    composites: {}
  }

  type serviciosGetPayload<S extends boolean | null | undefined | serviciosDefaultArgs> = $Result.GetResult<Prisma.$serviciosPayload, S>

  type serviciosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<serviciosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServiciosCountAggregateInputType | true
    }

  export interface serviciosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['servicios'], meta: { name: 'servicios' } }
    /**
     * Find zero or one Servicios that matches the filter.
     * @param {serviciosFindUniqueArgs} args - Arguments to find a Servicios
     * @example
     * // Get one Servicios
     * const servicios = await prisma.servicios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends serviciosFindUniqueArgs>(args: SelectSubset<T, serviciosFindUniqueArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Servicios that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {serviciosFindUniqueOrThrowArgs} args - Arguments to find a Servicios
     * @example
     * // Get one Servicios
     * const servicios = await prisma.servicios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends serviciosFindUniqueOrThrowArgs>(args: SelectSubset<T, serviciosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Servicios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviciosFindFirstArgs} args - Arguments to find a Servicios
     * @example
     * // Get one Servicios
     * const servicios = await prisma.servicios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends serviciosFindFirstArgs>(args?: SelectSubset<T, serviciosFindFirstArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Servicios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviciosFindFirstOrThrowArgs} args - Arguments to find a Servicios
     * @example
     * // Get one Servicios
     * const servicios = await prisma.servicios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends serviciosFindFirstOrThrowArgs>(args?: SelectSubset<T, serviciosFindFirstOrThrowArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Servicios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviciosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Servicios
     * const servicios = await prisma.servicios.findMany()
     * 
     * // Get first 10 Servicios
     * const servicios = await prisma.servicios.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviciosWithIdOnly = await prisma.servicios.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends serviciosFindManyArgs>(args?: SelectSubset<T, serviciosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Servicios.
     * @param {serviciosCreateArgs} args - Arguments to create a Servicios.
     * @example
     * // Create one Servicios
     * const Servicios = await prisma.servicios.create({
     *   data: {
     *     // ... data to create a Servicios
     *   }
     * })
     * 
     */
    create<T extends serviciosCreateArgs>(args: SelectSubset<T, serviciosCreateArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Servicios.
     * @param {serviciosCreateManyArgs} args - Arguments to create many Servicios.
     * @example
     * // Create many Servicios
     * const servicios = await prisma.servicios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends serviciosCreateManyArgs>(args?: SelectSubset<T, serviciosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Servicios.
     * @param {serviciosDeleteArgs} args - Arguments to delete one Servicios.
     * @example
     * // Delete one Servicios
     * const Servicios = await prisma.servicios.delete({
     *   where: {
     *     // ... filter to delete one Servicios
     *   }
     * })
     * 
     */
    delete<T extends serviciosDeleteArgs>(args: SelectSubset<T, serviciosDeleteArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Servicios.
     * @param {serviciosUpdateArgs} args - Arguments to update one Servicios.
     * @example
     * // Update one Servicios
     * const servicios = await prisma.servicios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends serviciosUpdateArgs>(args: SelectSubset<T, serviciosUpdateArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Servicios.
     * @param {serviciosDeleteManyArgs} args - Arguments to filter Servicios to delete.
     * @example
     * // Delete a few Servicios
     * const { count } = await prisma.servicios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends serviciosDeleteManyArgs>(args?: SelectSubset<T, serviciosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviciosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Servicios
     * const servicios = await prisma.servicios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends serviciosUpdateManyArgs>(args: SelectSubset<T, serviciosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Servicios.
     * @param {serviciosUpsertArgs} args - Arguments to update or create a Servicios.
     * @example
     * // Update or create a Servicios
     * const servicios = await prisma.servicios.upsert({
     *   create: {
     *     // ... data to create a Servicios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Servicios we want to update
     *   }
     * })
     */
    upsert<T extends serviciosUpsertArgs>(args: SelectSubset<T, serviciosUpsertArgs<ExtArgs>>): Prisma__serviciosClient<$Result.GetResult<Prisma.$serviciosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviciosCountArgs} args - Arguments to filter Servicios to count.
     * @example
     * // Count the number of Servicios
     * const count = await prisma.servicios.count({
     *   where: {
     *     // ... the filter for the Servicios we want to count
     *   }
     * })
    **/
    count<T extends serviciosCountArgs>(
      args?: Subset<T, serviciosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiciosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiciosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiciosAggregateArgs>(args: Subset<T, ServiciosAggregateArgs>): Prisma.PrismaPromise<GetServiciosAggregateType<T>>

    /**
     * Group by Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {serviciosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends serviciosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: serviciosGroupByArgs['orderBy'] }
        : { orderBy?: serviciosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, serviciosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiciosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the servicios model
   */
  readonly fields: serviciosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for servicios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__serviciosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empresas<T extends empresasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, empresasDefaultArgs<ExtArgs>>): Prisma__empresasClient<$Result.GetResult<Prisma.$empresasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the servicios model
   */
  interface serviciosFieldRefs {
    readonly id: FieldRef<"servicios", 'Int'>
    readonly empresa_id: FieldRef<"servicios", 'Int'>
    readonly nombre: FieldRef<"servicios", 'String'>
    readonly descripcion: FieldRef<"servicios", 'String'>
    readonly imagen_url: FieldRef<"servicios", 'String'>
  }
    

  // Custom InputTypes
  /**
   * servicios findUnique
   */
  export type serviciosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * Filter, which servicios to fetch.
     */
    where: serviciosWhereUniqueInput
  }

  /**
   * servicios findUniqueOrThrow
   */
  export type serviciosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * Filter, which servicios to fetch.
     */
    where: serviciosWhereUniqueInput
  }

  /**
   * servicios findFirst
   */
  export type serviciosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * Filter, which servicios to fetch.
     */
    where?: serviciosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicios to fetch.
     */
    orderBy?: serviciosOrderByWithRelationInput | serviciosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for servicios.
     */
    cursor?: serviciosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of servicios.
     */
    distinct?: ServiciosScalarFieldEnum | ServiciosScalarFieldEnum[]
  }

  /**
   * servicios findFirstOrThrow
   */
  export type serviciosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * Filter, which servicios to fetch.
     */
    where?: serviciosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicios to fetch.
     */
    orderBy?: serviciosOrderByWithRelationInput | serviciosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for servicios.
     */
    cursor?: serviciosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of servicios.
     */
    distinct?: ServiciosScalarFieldEnum | ServiciosScalarFieldEnum[]
  }

  /**
   * servicios findMany
   */
  export type serviciosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * Filter, which servicios to fetch.
     */
    where?: serviciosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicios to fetch.
     */
    orderBy?: serviciosOrderByWithRelationInput | serviciosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing servicios.
     */
    cursor?: serviciosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicios.
     */
    skip?: number
    distinct?: ServiciosScalarFieldEnum | ServiciosScalarFieldEnum[]
  }

  /**
   * servicios create
   */
  export type serviciosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * The data needed to create a servicios.
     */
    data: XOR<serviciosCreateInput, serviciosUncheckedCreateInput>
  }

  /**
   * servicios createMany
   */
  export type serviciosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many servicios.
     */
    data: serviciosCreateManyInput | serviciosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * servicios update
   */
  export type serviciosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * The data needed to update a servicios.
     */
    data: XOR<serviciosUpdateInput, serviciosUncheckedUpdateInput>
    /**
     * Choose, which servicios to update.
     */
    where: serviciosWhereUniqueInput
  }

  /**
   * servicios updateMany
   */
  export type serviciosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update servicios.
     */
    data: XOR<serviciosUpdateManyMutationInput, serviciosUncheckedUpdateManyInput>
    /**
     * Filter which servicios to update
     */
    where?: serviciosWhereInput
    /**
     * Limit how many servicios to update.
     */
    limit?: number
  }

  /**
   * servicios upsert
   */
  export type serviciosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * The filter to search for the servicios to update in case it exists.
     */
    where: serviciosWhereUniqueInput
    /**
     * In case the servicios found by the `where` argument doesn't exist, create a new servicios with this data.
     */
    create: XOR<serviciosCreateInput, serviciosUncheckedCreateInput>
    /**
     * In case the servicios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<serviciosUpdateInput, serviciosUncheckedUpdateInput>
  }

  /**
   * servicios delete
   */
  export type serviciosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
    /**
     * Filter which servicios to delete.
     */
    where: serviciosWhereUniqueInput
  }

  /**
   * servicios deleteMany
   */
  export type serviciosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which servicios to delete
     */
    where?: serviciosWhereInput
    /**
     * Limit how many servicios to delete.
     */
    limit?: number
  }

  /**
   * servicios without action
   */
  export type serviciosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servicios
     */
    select?: serviciosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the servicios
     */
    omit?: serviciosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: serviciosInclude<ExtArgs> | null
  }


  /**
   * Model usuarios
   */

  export type AggregateUsuarios = {
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  export type UsuariosAvgAggregateOutputType = {
    id: number | null
  }

  export type UsuariosSumAggregateOutputType = {
    id: number | null
  }

  export type UsuariosMinAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    creado_en: Date | null
  }

  export type UsuariosMaxAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    creado_en: Date | null
  }

  export type UsuariosCountAggregateOutputType = {
    id: number
    email: number
    password: number
    creado_en: number
    _all: number
  }


  export type UsuariosAvgAggregateInputType = {
    id?: true
  }

  export type UsuariosSumAggregateInputType = {
    id?: true
  }

  export type UsuariosMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    creado_en?: true
  }

  export type UsuariosMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    creado_en?: true
  }

  export type UsuariosCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    creado_en?: true
    _all?: true
  }

  export type UsuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to aggregate.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuariosMaxAggregateInputType
  }

  export type GetUsuariosAggregateType<T extends UsuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarios[P]>
      : GetScalarType<T[P], AggregateUsuarios[P]>
  }




  export type usuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithAggregationInput | usuariosOrderByWithAggregationInput[]
    by: UsuariosScalarFieldEnum[] | UsuariosScalarFieldEnum
    having?: usuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuariosCountAggregateInputType | true
    _avg?: UsuariosAvgAggregateInputType
    _sum?: UsuariosSumAggregateInputType
    _min?: UsuariosMinAggregateInputType
    _max?: UsuariosMaxAggregateInputType
  }

  export type UsuariosGroupByOutputType = {
    id: number
    email: string
    password: string
    creado_en: Date | null
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  type GetUsuariosGroupByPayload<T extends usuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
            : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
        }
      >
    >


  export type usuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    creado_en?: boolean
    empresas?: boolean | usuarios$empresasArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>



  export type usuariosSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    creado_en?: boolean
  }

  export type usuariosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "password" | "creado_en", ExtArgs["result"]["usuarios"]>
  export type usuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empresas?: boolean | usuarios$empresasArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $usuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuarios"
    objects: {
      empresas: Prisma.$empresasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      password: string
      creado_en: Date | null
    }, ExtArgs["result"]["usuarios"]>
    composites: {}
  }

  type usuariosGetPayload<S extends boolean | null | undefined | usuariosDefaultArgs> = $Result.GetResult<Prisma.$usuariosPayload, S>

  type usuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usuariosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuariosCountAggregateInputType | true
    }

  export interface usuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuarios'], meta: { name: 'usuarios' } }
    /**
     * Find zero or one Usuarios that matches the filter.
     * @param {usuariosFindUniqueArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usuariosFindUniqueArgs>(args: SelectSubset<T, usuariosFindUniqueArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuarios that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usuariosFindUniqueOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usuariosFindUniqueOrThrowArgs>(args: SelectSubset<T, usuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usuariosFindFirstArgs>(args?: SelectSubset<T, usuariosFindFirstArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usuariosFindFirstOrThrowArgs>(args?: SelectSubset<T, usuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuarios.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuarios.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usuariosFindManyArgs>(args?: SelectSubset<T, usuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuarios.
     * @param {usuariosCreateArgs} args - Arguments to create a Usuarios.
     * @example
     * // Create one Usuarios
     * const Usuarios = await prisma.usuarios.create({
     *   data: {
     *     // ... data to create a Usuarios
     *   }
     * })
     * 
     */
    create<T extends usuariosCreateArgs>(args: SelectSubset<T, usuariosCreateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {usuariosCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usuariosCreateManyArgs>(args?: SelectSubset<T, usuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Usuarios.
     * @param {usuariosDeleteArgs} args - Arguments to delete one Usuarios.
     * @example
     * // Delete one Usuarios
     * const Usuarios = await prisma.usuarios.delete({
     *   where: {
     *     // ... filter to delete one Usuarios
     *   }
     * })
     * 
     */
    delete<T extends usuariosDeleteArgs>(args: SelectSubset<T, usuariosDeleteArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuarios.
     * @param {usuariosUpdateArgs} args - Arguments to update one Usuarios.
     * @example
     * // Update one Usuarios
     * const usuarios = await prisma.usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usuariosUpdateArgs>(args: SelectSubset<T, usuariosUpdateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {usuariosDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usuariosDeleteManyArgs>(args?: SelectSubset<T, usuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usuariosUpdateManyArgs>(args: SelectSubset<T, usuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuarios.
     * @param {usuariosUpsertArgs} args - Arguments to update or create a Usuarios.
     * @example
     * // Update or create a Usuarios
     * const usuarios = await prisma.usuarios.upsert({
     *   create: {
     *     // ... data to create a Usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuarios we want to update
     *   }
     * })
     */
    upsert<T extends usuariosUpsertArgs>(args: SelectSubset<T, usuariosUpsertArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuarios.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuariosCountArgs>(
      args?: Subset<T, usuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuariosAggregateArgs>(args: Subset<T, UsuariosAggregateArgs>): Prisma.PrismaPromise<GetUsuariosAggregateType<T>>

    /**
     * Group by Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuariosGroupByArgs['orderBy'] }
        : { orderBy?: usuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuarios model
   */
  readonly fields: usuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empresas<T extends usuarios$empresasArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$empresasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$empresasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the usuarios model
   */
  interface usuariosFieldRefs {
    readonly id: FieldRef<"usuarios", 'Int'>
    readonly email: FieldRef<"usuarios", 'String'>
    readonly password: FieldRef<"usuarios", 'String'>
    readonly creado_en: FieldRef<"usuarios", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * usuarios findUnique
   */
  export type usuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findUniqueOrThrow
   */
  export type usuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findFirst
   */
  export type usuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findFirstOrThrow
   */
  export type usuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findMany
   */
  export type usuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios create
   */
  export type usuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a usuarios.
     */
    data: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
  }

  /**
   * usuarios createMany
   */
  export type usuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuarios update
   */
  export type usuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a usuarios.
     */
    data: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
    /**
     * Choose, which usuarios to update.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios updateMany
   */
  export type usuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuarios upsert
   */
  export type usuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the usuarios to update in case it exists.
     */
    where: usuariosWhereUniqueInput
    /**
     * In case the usuarios found by the `where` argument doesn't exist, create a new usuarios with this data.
     */
    create: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
    /**
     * In case the usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
  }

  /**
   * usuarios delete
   */
  export type usuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter which usuarios to delete.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios deleteMany
   */
  export type usuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to delete.
     */
    limit?: number
  }

  /**
   * usuarios.empresas
   */
  export type usuarios$empresasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the empresas
     */
    select?: empresasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the empresas
     */
    omit?: empresasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: empresasInclude<ExtArgs> | null
    where?: empresasWhereInput
    orderBy?: empresasOrderByWithRelationInput | empresasOrderByWithRelationInput[]
    cursor?: empresasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmpresasScalarFieldEnum | EmpresasScalarFieldEnum[]
  }

  /**
   * usuarios without action
   */
  export type usuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const EmpresasScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    logo_url: 'logo_url',
    banner_url: 'banner_url',
    telefono_contacto: 'telefono_contacto',
    correo_contacto: 'correo_contacto',
    direccion: 'direccion',
    redes_sociales: 'redes_sociales',
    sitio_web: 'sitio_web',
    creado_en: 'creado_en'
  };

  export type EmpresasScalarFieldEnum = (typeof EmpresasScalarFieldEnum)[keyof typeof EmpresasScalarFieldEnum]


  export const ProspectosScalarFieldEnum: {
    id: 'id',
    empresa_id: 'empresa_id',
    nombre: 'nombre',
    correo: 'correo',
    telefono: 'telefono',
    status: 'status',
    comentarios: 'comentarios',
    integrantes: 'integrantes',
    creado_en: 'creado_en'
  };

  export type ProspectosScalarFieldEnum = (typeof ProspectosScalarFieldEnum)[keyof typeof ProspectosScalarFieldEnum]


  export const ServiciosScalarFieldEnum: {
    id: 'id',
    empresa_id: 'empresa_id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    imagen_url: 'imagen_url'
  };

  export type ServiciosScalarFieldEnum = (typeof ServiciosScalarFieldEnum)[keyof typeof ServiciosScalarFieldEnum]


  export const UsuariosScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    creado_en: 'creado_en'
  };

  export type UsuariosScalarFieldEnum = (typeof UsuariosScalarFieldEnum)[keyof typeof UsuariosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const empresasOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    descripcion: 'descripcion',
    logo_url: 'logo_url',
    banner_url: 'banner_url',
    telefono_contacto: 'telefono_contacto',
    correo_contacto: 'correo_contacto',
    direccion: 'direccion',
    redes_sociales: 'redes_sociales',
    sitio_web: 'sitio_web'
  };

  export type empresasOrderByRelevanceFieldEnum = (typeof empresasOrderByRelevanceFieldEnum)[keyof typeof empresasOrderByRelevanceFieldEnum]


  export const prospectosOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    correo: 'correo',
    telefono: 'telefono',
    comentarios: 'comentarios'
  };

  export type prospectosOrderByRelevanceFieldEnum = (typeof prospectosOrderByRelevanceFieldEnum)[keyof typeof prospectosOrderByRelevanceFieldEnum]


  export const serviciosOrderByRelevanceFieldEnum: {
    nombre: 'nombre',
    descripcion: 'descripcion',
    imagen_url: 'imagen_url'
  };

  export type serviciosOrderByRelevanceFieldEnum = (typeof serviciosOrderByRelevanceFieldEnum)[keyof typeof serviciosOrderByRelevanceFieldEnum]


  export const usuariosOrderByRelevanceFieldEnum: {
    email: 'email',
    password: 'password'
  };

  export type usuariosOrderByRelevanceFieldEnum = (typeof usuariosOrderByRelevanceFieldEnum)[keyof typeof usuariosOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'prospectos_status'
   */
  export type Enumprospectos_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'prospectos_status'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type empresasWhereInput = {
    AND?: empresasWhereInput | empresasWhereInput[]
    OR?: empresasWhereInput[]
    NOT?: empresasWhereInput | empresasWhereInput[]
    id?: IntFilter<"empresas"> | number
    usuario_id?: IntFilter<"empresas"> | number
    nombre?: StringFilter<"empresas"> | string
    descripcion?: StringNullableFilter<"empresas"> | string | null
    logo_url?: StringNullableFilter<"empresas"> | string | null
    banner_url?: StringNullableFilter<"empresas"> | string | null
    telefono_contacto?: StringNullableFilter<"empresas"> | string | null
    correo_contacto?: StringNullableFilter<"empresas"> | string | null
    direccion?: StringNullableFilter<"empresas"> | string | null
    redes_sociales?: StringNullableFilter<"empresas"> | string | null
    sitio_web?: StringNullableFilter<"empresas"> | string | null
    creado_en?: DateTimeNullableFilter<"empresas"> | Date | string | null
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    prospectos?: ProspectosListRelationFilter
    servicios?: ServiciosListRelationFilter
  }

  export type empresasOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    logo_url?: SortOrderInput | SortOrder
    banner_url?: SortOrderInput | SortOrder
    telefono_contacto?: SortOrderInput | SortOrder
    correo_contacto?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    redes_sociales?: SortOrderInput | SortOrder
    sitio_web?: SortOrderInput | SortOrder
    creado_en?: SortOrderInput | SortOrder
    usuarios?: usuariosOrderByWithRelationInput
    prospectos?: prospectosOrderByRelationAggregateInput
    servicios?: serviciosOrderByRelationAggregateInput
    _relevance?: empresasOrderByRelevanceInput
  }

  export type empresasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: empresasWhereInput | empresasWhereInput[]
    OR?: empresasWhereInput[]
    NOT?: empresasWhereInput | empresasWhereInput[]
    usuario_id?: IntFilter<"empresas"> | number
    nombre?: StringFilter<"empresas"> | string
    descripcion?: StringNullableFilter<"empresas"> | string | null
    logo_url?: StringNullableFilter<"empresas"> | string | null
    banner_url?: StringNullableFilter<"empresas"> | string | null
    telefono_contacto?: StringNullableFilter<"empresas"> | string | null
    correo_contacto?: StringNullableFilter<"empresas"> | string | null
    direccion?: StringNullableFilter<"empresas"> | string | null
    redes_sociales?: StringNullableFilter<"empresas"> | string | null
    sitio_web?: StringNullableFilter<"empresas"> | string | null
    creado_en?: DateTimeNullableFilter<"empresas"> | Date | string | null
    usuarios?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    prospectos?: ProspectosListRelationFilter
    servicios?: ServiciosListRelationFilter
  }, "id">

  export type empresasOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    logo_url?: SortOrderInput | SortOrder
    banner_url?: SortOrderInput | SortOrder
    telefono_contacto?: SortOrderInput | SortOrder
    correo_contacto?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    redes_sociales?: SortOrderInput | SortOrder
    sitio_web?: SortOrderInput | SortOrder
    creado_en?: SortOrderInput | SortOrder
    _count?: empresasCountOrderByAggregateInput
    _avg?: empresasAvgOrderByAggregateInput
    _max?: empresasMaxOrderByAggregateInput
    _min?: empresasMinOrderByAggregateInput
    _sum?: empresasSumOrderByAggregateInput
  }

  export type empresasScalarWhereWithAggregatesInput = {
    AND?: empresasScalarWhereWithAggregatesInput | empresasScalarWhereWithAggregatesInput[]
    OR?: empresasScalarWhereWithAggregatesInput[]
    NOT?: empresasScalarWhereWithAggregatesInput | empresasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"empresas"> | number
    usuario_id?: IntWithAggregatesFilter<"empresas"> | number
    nombre?: StringWithAggregatesFilter<"empresas"> | string
    descripcion?: StringNullableWithAggregatesFilter<"empresas"> | string | null
    logo_url?: StringNullableWithAggregatesFilter<"empresas"> | string | null
    banner_url?: StringNullableWithAggregatesFilter<"empresas"> | string | null
    telefono_contacto?: StringNullableWithAggregatesFilter<"empresas"> | string | null
    correo_contacto?: StringNullableWithAggregatesFilter<"empresas"> | string | null
    direccion?: StringNullableWithAggregatesFilter<"empresas"> | string | null
    redes_sociales?: StringNullableWithAggregatesFilter<"empresas"> | string | null
    sitio_web?: StringNullableWithAggregatesFilter<"empresas"> | string | null
    creado_en?: DateTimeNullableWithAggregatesFilter<"empresas"> | Date | string | null
  }

  export type prospectosWhereInput = {
    AND?: prospectosWhereInput | prospectosWhereInput[]
    OR?: prospectosWhereInput[]
    NOT?: prospectosWhereInput | prospectosWhereInput[]
    id?: IntFilter<"prospectos"> | number
    empresa_id?: IntFilter<"prospectos"> | number
    nombre?: StringFilter<"prospectos"> | string
    correo?: StringNullableFilter<"prospectos"> | string | null
    telefono?: StringNullableFilter<"prospectos"> | string | null
    status?: Enumprospectos_statusNullableFilter<"prospectos"> | $Enums.prospectos_status | null
    comentarios?: StringNullableFilter<"prospectos"> | string | null
    integrantes?: IntNullableFilter<"prospectos"> | number | null
    creado_en?: DateTimeNullableFilter<"prospectos"> | Date | string | null
    empresas?: XOR<EmpresasScalarRelationFilter, empresasWhereInput>
  }

  export type prospectosOrderByWithRelationInput = {
    id?: SortOrder
    empresa_id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    comentarios?: SortOrderInput | SortOrder
    integrantes?: SortOrderInput | SortOrder
    creado_en?: SortOrderInput | SortOrder
    empresas?: empresasOrderByWithRelationInput
    _relevance?: prospectosOrderByRelevanceInput
  }

  export type prospectosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: prospectosWhereInput | prospectosWhereInput[]
    OR?: prospectosWhereInput[]
    NOT?: prospectosWhereInput | prospectosWhereInput[]
    empresa_id?: IntFilter<"prospectos"> | number
    nombre?: StringFilter<"prospectos"> | string
    correo?: StringNullableFilter<"prospectos"> | string | null
    telefono?: StringNullableFilter<"prospectos"> | string | null
    status?: Enumprospectos_statusNullableFilter<"prospectos"> | $Enums.prospectos_status | null
    comentarios?: StringNullableFilter<"prospectos"> | string | null
    integrantes?: IntNullableFilter<"prospectos"> | number | null
    creado_en?: DateTimeNullableFilter<"prospectos"> | Date | string | null
    empresas?: XOR<EmpresasScalarRelationFilter, empresasWhereInput>
  }, "id">

  export type prospectosOrderByWithAggregationInput = {
    id?: SortOrder
    empresa_id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    comentarios?: SortOrderInput | SortOrder
    integrantes?: SortOrderInput | SortOrder
    creado_en?: SortOrderInput | SortOrder
    _count?: prospectosCountOrderByAggregateInput
    _avg?: prospectosAvgOrderByAggregateInput
    _max?: prospectosMaxOrderByAggregateInput
    _min?: prospectosMinOrderByAggregateInput
    _sum?: prospectosSumOrderByAggregateInput
  }

  export type prospectosScalarWhereWithAggregatesInput = {
    AND?: prospectosScalarWhereWithAggregatesInput | prospectosScalarWhereWithAggregatesInput[]
    OR?: prospectosScalarWhereWithAggregatesInput[]
    NOT?: prospectosScalarWhereWithAggregatesInput | prospectosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"prospectos"> | number
    empresa_id?: IntWithAggregatesFilter<"prospectos"> | number
    nombre?: StringWithAggregatesFilter<"prospectos"> | string
    correo?: StringNullableWithAggregatesFilter<"prospectos"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"prospectos"> | string | null
    status?: Enumprospectos_statusNullableWithAggregatesFilter<"prospectos"> | $Enums.prospectos_status | null
    comentarios?: StringNullableWithAggregatesFilter<"prospectos"> | string | null
    integrantes?: IntNullableWithAggregatesFilter<"prospectos"> | number | null
    creado_en?: DateTimeNullableWithAggregatesFilter<"prospectos"> | Date | string | null
  }

  export type serviciosWhereInput = {
    AND?: serviciosWhereInput | serviciosWhereInput[]
    OR?: serviciosWhereInput[]
    NOT?: serviciosWhereInput | serviciosWhereInput[]
    id?: IntFilter<"servicios"> | number
    empresa_id?: IntFilter<"servicios"> | number
    nombre?: StringFilter<"servicios"> | string
    descripcion?: StringNullableFilter<"servicios"> | string | null
    imagen_url?: StringNullableFilter<"servicios"> | string | null
    empresas?: XOR<EmpresasScalarRelationFilter, empresasWhereInput>
  }

  export type serviciosOrderByWithRelationInput = {
    id?: SortOrder
    empresa_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    imagen_url?: SortOrderInput | SortOrder
    empresas?: empresasOrderByWithRelationInput
    _relevance?: serviciosOrderByRelevanceInput
  }

  export type serviciosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: serviciosWhereInput | serviciosWhereInput[]
    OR?: serviciosWhereInput[]
    NOT?: serviciosWhereInput | serviciosWhereInput[]
    empresa_id?: IntFilter<"servicios"> | number
    nombre?: StringFilter<"servicios"> | string
    descripcion?: StringNullableFilter<"servicios"> | string | null
    imagen_url?: StringNullableFilter<"servicios"> | string | null
    empresas?: XOR<EmpresasScalarRelationFilter, empresasWhereInput>
  }, "id">

  export type serviciosOrderByWithAggregationInput = {
    id?: SortOrder
    empresa_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    imagen_url?: SortOrderInput | SortOrder
    _count?: serviciosCountOrderByAggregateInput
    _avg?: serviciosAvgOrderByAggregateInput
    _max?: serviciosMaxOrderByAggregateInput
    _min?: serviciosMinOrderByAggregateInput
    _sum?: serviciosSumOrderByAggregateInput
  }

  export type serviciosScalarWhereWithAggregatesInput = {
    AND?: serviciosScalarWhereWithAggregatesInput | serviciosScalarWhereWithAggregatesInput[]
    OR?: serviciosScalarWhereWithAggregatesInput[]
    NOT?: serviciosScalarWhereWithAggregatesInput | serviciosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"servicios"> | number
    empresa_id?: IntWithAggregatesFilter<"servicios"> | number
    nombre?: StringWithAggregatesFilter<"servicios"> | string
    descripcion?: StringNullableWithAggregatesFilter<"servicios"> | string | null
    imagen_url?: StringNullableWithAggregatesFilter<"servicios"> | string | null
  }

  export type usuariosWhereInput = {
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    id?: IntFilter<"usuarios"> | number
    email?: StringFilter<"usuarios"> | string
    password?: StringFilter<"usuarios"> | string
    creado_en?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    empresas?: EmpresasListRelationFilter
  }

  export type usuariosOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    creado_en?: SortOrderInput | SortOrder
    empresas?: empresasOrderByRelationAggregateInput
    _relevance?: usuariosOrderByRelevanceInput
  }

  export type usuariosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    password?: StringFilter<"usuarios"> | string
    creado_en?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    empresas?: EmpresasListRelationFilter
  }, "id" | "email">

  export type usuariosOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    creado_en?: SortOrderInput | SortOrder
    _count?: usuariosCountOrderByAggregateInput
    _avg?: usuariosAvgOrderByAggregateInput
    _max?: usuariosMaxOrderByAggregateInput
    _min?: usuariosMinOrderByAggregateInput
    _sum?: usuariosSumOrderByAggregateInput
  }

  export type usuariosScalarWhereWithAggregatesInput = {
    AND?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    OR?: usuariosScalarWhereWithAggregatesInput[]
    NOT?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"usuarios"> | number
    email?: StringWithAggregatesFilter<"usuarios"> | string
    password?: StringWithAggregatesFilter<"usuarios"> | string
    creado_en?: DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
  }

  export type empresasCreateInput = {
    nombre: string
    descripcion?: string | null
    logo_url?: string | null
    banner_url?: string | null
    telefono_contacto?: string | null
    correo_contacto?: string | null
    direccion?: string | null
    redes_sociales?: string | null
    sitio_web?: string | null
    creado_en?: Date | string | null
    usuarios: usuariosCreateNestedOneWithoutEmpresasInput
    prospectos?: prospectosCreateNestedManyWithoutEmpresasInput
    servicios?: serviciosCreateNestedManyWithoutEmpresasInput
  }

  export type empresasUncheckedCreateInput = {
    id?: number
    usuario_id: number
    nombre: string
    descripcion?: string | null
    logo_url?: string | null
    banner_url?: string | null
    telefono_contacto?: string | null
    correo_contacto?: string | null
    direccion?: string | null
    redes_sociales?: string | null
    sitio_web?: string | null
    creado_en?: Date | string | null
    prospectos?: prospectosUncheckedCreateNestedManyWithoutEmpresasInput
    servicios?: serviciosUncheckedCreateNestedManyWithoutEmpresasInput
  }

  export type empresasUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_url?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    correo_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    redes_sociales?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarios?: usuariosUpdateOneRequiredWithoutEmpresasNestedInput
    prospectos?: prospectosUpdateManyWithoutEmpresasNestedInput
    servicios?: serviciosUpdateManyWithoutEmpresasNestedInput
  }

  export type empresasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_url?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    correo_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    redes_sociales?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prospectos?: prospectosUncheckedUpdateManyWithoutEmpresasNestedInput
    servicios?: serviciosUncheckedUpdateManyWithoutEmpresasNestedInput
  }

  export type empresasCreateManyInput = {
    id?: number
    usuario_id: number
    nombre: string
    descripcion?: string | null
    logo_url?: string | null
    banner_url?: string | null
    telefono_contacto?: string | null
    correo_contacto?: string | null
    direccion?: string | null
    redes_sociales?: string | null
    sitio_web?: string | null
    creado_en?: Date | string | null
  }

  export type empresasUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_url?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    correo_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    redes_sociales?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type empresasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_url?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    correo_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    redes_sociales?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type prospectosCreateInput = {
    nombre: string
    correo?: string | null
    telefono?: string | null
    status?: $Enums.prospectos_status | null
    comentarios?: string | null
    integrantes?: number | null
    creado_en?: Date | string | null
    empresas: empresasCreateNestedOneWithoutProspectosInput
  }

  export type prospectosUncheckedCreateInput = {
    id?: number
    empresa_id: number
    nombre: string
    correo?: string | null
    telefono?: string | null
    status?: $Enums.prospectos_status | null
    comentarios?: string | null
    integrantes?: number | null
    creado_en?: Date | string | null
  }

  export type prospectosUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumprospectos_statusFieldUpdateOperationsInput | $Enums.prospectos_status | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    integrantes?: NullableIntFieldUpdateOperationsInput | number | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empresas?: empresasUpdateOneRequiredWithoutProspectosNestedInput
  }

  export type prospectosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresa_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumprospectos_statusFieldUpdateOperationsInput | $Enums.prospectos_status | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    integrantes?: NullableIntFieldUpdateOperationsInput | number | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type prospectosCreateManyInput = {
    id?: number
    empresa_id: number
    nombre: string
    correo?: string | null
    telefono?: string | null
    status?: $Enums.prospectos_status | null
    comentarios?: string | null
    integrantes?: number | null
    creado_en?: Date | string | null
  }

  export type prospectosUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumprospectos_statusFieldUpdateOperationsInput | $Enums.prospectos_status | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    integrantes?: NullableIntFieldUpdateOperationsInput | number | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type prospectosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresa_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumprospectos_statusFieldUpdateOperationsInput | $Enums.prospectos_status | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    integrantes?: NullableIntFieldUpdateOperationsInput | number | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type serviciosCreateInput = {
    nombre: string
    descripcion?: string | null
    imagen_url?: string | null
    empresas: empresasCreateNestedOneWithoutServiciosInput
  }

  export type serviciosUncheckedCreateInput = {
    id?: number
    empresa_id: number
    nombre: string
    descripcion?: string | null
    imagen_url?: string | null
  }

  export type serviciosUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
    empresas?: empresasUpdateOneRequiredWithoutServiciosNestedInput
  }

  export type serviciosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresa_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type serviciosCreateManyInput = {
    id?: number
    empresa_id: number
    nombre: string
    descripcion?: string | null
    imagen_url?: string | null
  }

  export type serviciosUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type serviciosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresa_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usuariosCreateInput = {
    email: string
    password: string
    creado_en?: Date | string | null
    empresas?: empresasCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateInput = {
    id?: number
    email: string
    password: string
    creado_en?: Date | string | null
    empresas?: empresasUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empresas?: empresasUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empresas?: empresasUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosCreateManyInput = {
    id?: number
    email: string
    password: string
    creado_en?: Date | string | null
  }

  export type usuariosUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuariosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UsuariosScalarRelationFilter = {
    is?: usuariosWhereInput
    isNot?: usuariosWhereInput
  }

  export type ProspectosListRelationFilter = {
    every?: prospectosWhereInput
    some?: prospectosWhereInput
    none?: prospectosWhereInput
  }

  export type ServiciosListRelationFilter = {
    every?: serviciosWhereInput
    some?: serviciosWhereInput
    none?: serviciosWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type prospectosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type serviciosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type empresasOrderByRelevanceInput = {
    fields: empresasOrderByRelevanceFieldEnum | empresasOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type empresasCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    logo_url?: SortOrder
    banner_url?: SortOrder
    telefono_contacto?: SortOrder
    correo_contacto?: SortOrder
    direccion?: SortOrder
    redes_sociales?: SortOrder
    sitio_web?: SortOrder
    creado_en?: SortOrder
  }

  export type empresasAvgOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
  }

  export type empresasMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    logo_url?: SortOrder
    banner_url?: SortOrder
    telefono_contacto?: SortOrder
    correo_contacto?: SortOrder
    direccion?: SortOrder
    redes_sociales?: SortOrder
    sitio_web?: SortOrder
    creado_en?: SortOrder
  }

  export type empresasMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    logo_url?: SortOrder
    banner_url?: SortOrder
    telefono_contacto?: SortOrder
    correo_contacto?: SortOrder
    direccion?: SortOrder
    redes_sociales?: SortOrder
    sitio_web?: SortOrder
    creado_en?: SortOrder
  }

  export type empresasSumOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type Enumprospectos_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.prospectos_status | Enumprospectos_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.prospectos_status[] | null
    notIn?: $Enums.prospectos_status[] | null
    not?: NestedEnumprospectos_statusNullableFilter<$PrismaModel> | $Enums.prospectos_status | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EmpresasScalarRelationFilter = {
    is?: empresasWhereInput
    isNot?: empresasWhereInput
  }

  export type prospectosOrderByRelevanceInput = {
    fields: prospectosOrderByRelevanceFieldEnum | prospectosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type prospectosCountOrderByAggregateInput = {
    id?: SortOrder
    empresa_id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    telefono?: SortOrder
    status?: SortOrder
    comentarios?: SortOrder
    integrantes?: SortOrder
    creado_en?: SortOrder
  }

  export type prospectosAvgOrderByAggregateInput = {
    id?: SortOrder
    empresa_id?: SortOrder
    integrantes?: SortOrder
  }

  export type prospectosMaxOrderByAggregateInput = {
    id?: SortOrder
    empresa_id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    telefono?: SortOrder
    status?: SortOrder
    comentarios?: SortOrder
    integrantes?: SortOrder
    creado_en?: SortOrder
  }

  export type prospectosMinOrderByAggregateInput = {
    id?: SortOrder
    empresa_id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    telefono?: SortOrder
    status?: SortOrder
    comentarios?: SortOrder
    integrantes?: SortOrder
    creado_en?: SortOrder
  }

  export type prospectosSumOrderByAggregateInput = {
    id?: SortOrder
    empresa_id?: SortOrder
    integrantes?: SortOrder
  }

  export type Enumprospectos_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.prospectos_status | Enumprospectos_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.prospectos_status[] | null
    notIn?: $Enums.prospectos_status[] | null
    not?: NestedEnumprospectos_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.prospectos_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumprospectos_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumprospectos_statusNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type serviciosOrderByRelevanceInput = {
    fields: serviciosOrderByRelevanceFieldEnum | serviciosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type serviciosCountOrderByAggregateInput = {
    id?: SortOrder
    empresa_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    imagen_url?: SortOrder
  }

  export type serviciosAvgOrderByAggregateInput = {
    id?: SortOrder
    empresa_id?: SortOrder
  }

  export type serviciosMaxOrderByAggregateInput = {
    id?: SortOrder
    empresa_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    imagen_url?: SortOrder
  }

  export type serviciosMinOrderByAggregateInput = {
    id?: SortOrder
    empresa_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    imagen_url?: SortOrder
  }

  export type serviciosSumOrderByAggregateInput = {
    id?: SortOrder
    empresa_id?: SortOrder
  }

  export type EmpresasListRelationFilter = {
    every?: empresasWhereInput
    some?: empresasWhereInput
    none?: empresasWhereInput
  }

  export type empresasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usuariosOrderByRelevanceInput = {
    fields: usuariosOrderByRelevanceFieldEnum | usuariosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type usuariosCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    creado_en?: SortOrder
  }

  export type usuariosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type usuariosMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    creado_en?: SortOrder
  }

  export type usuariosMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    creado_en?: SortOrder
  }

  export type usuariosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type usuariosCreateNestedOneWithoutEmpresasInput = {
    create?: XOR<usuariosCreateWithoutEmpresasInput, usuariosUncheckedCreateWithoutEmpresasInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutEmpresasInput
    connect?: usuariosWhereUniqueInput
  }

  export type prospectosCreateNestedManyWithoutEmpresasInput = {
    create?: XOR<prospectosCreateWithoutEmpresasInput, prospectosUncheckedCreateWithoutEmpresasInput> | prospectosCreateWithoutEmpresasInput[] | prospectosUncheckedCreateWithoutEmpresasInput[]
    connectOrCreate?: prospectosCreateOrConnectWithoutEmpresasInput | prospectosCreateOrConnectWithoutEmpresasInput[]
    createMany?: prospectosCreateManyEmpresasInputEnvelope
    connect?: prospectosWhereUniqueInput | prospectosWhereUniqueInput[]
  }

  export type serviciosCreateNestedManyWithoutEmpresasInput = {
    create?: XOR<serviciosCreateWithoutEmpresasInput, serviciosUncheckedCreateWithoutEmpresasInput> | serviciosCreateWithoutEmpresasInput[] | serviciosUncheckedCreateWithoutEmpresasInput[]
    connectOrCreate?: serviciosCreateOrConnectWithoutEmpresasInput | serviciosCreateOrConnectWithoutEmpresasInput[]
    createMany?: serviciosCreateManyEmpresasInputEnvelope
    connect?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
  }

  export type prospectosUncheckedCreateNestedManyWithoutEmpresasInput = {
    create?: XOR<prospectosCreateWithoutEmpresasInput, prospectosUncheckedCreateWithoutEmpresasInput> | prospectosCreateWithoutEmpresasInput[] | prospectosUncheckedCreateWithoutEmpresasInput[]
    connectOrCreate?: prospectosCreateOrConnectWithoutEmpresasInput | prospectosCreateOrConnectWithoutEmpresasInput[]
    createMany?: prospectosCreateManyEmpresasInputEnvelope
    connect?: prospectosWhereUniqueInput | prospectosWhereUniqueInput[]
  }

  export type serviciosUncheckedCreateNestedManyWithoutEmpresasInput = {
    create?: XOR<serviciosCreateWithoutEmpresasInput, serviciosUncheckedCreateWithoutEmpresasInput> | serviciosCreateWithoutEmpresasInput[] | serviciosUncheckedCreateWithoutEmpresasInput[]
    connectOrCreate?: serviciosCreateOrConnectWithoutEmpresasInput | serviciosCreateOrConnectWithoutEmpresasInput[]
    createMany?: serviciosCreateManyEmpresasInputEnvelope
    connect?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type usuariosUpdateOneRequiredWithoutEmpresasNestedInput = {
    create?: XOR<usuariosCreateWithoutEmpresasInput, usuariosUncheckedCreateWithoutEmpresasInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutEmpresasInput
    upsert?: usuariosUpsertWithoutEmpresasInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutEmpresasInput, usuariosUpdateWithoutEmpresasInput>, usuariosUncheckedUpdateWithoutEmpresasInput>
  }

  export type prospectosUpdateManyWithoutEmpresasNestedInput = {
    create?: XOR<prospectosCreateWithoutEmpresasInput, prospectosUncheckedCreateWithoutEmpresasInput> | prospectosCreateWithoutEmpresasInput[] | prospectosUncheckedCreateWithoutEmpresasInput[]
    connectOrCreate?: prospectosCreateOrConnectWithoutEmpresasInput | prospectosCreateOrConnectWithoutEmpresasInput[]
    upsert?: prospectosUpsertWithWhereUniqueWithoutEmpresasInput | prospectosUpsertWithWhereUniqueWithoutEmpresasInput[]
    createMany?: prospectosCreateManyEmpresasInputEnvelope
    set?: prospectosWhereUniqueInput | prospectosWhereUniqueInput[]
    disconnect?: prospectosWhereUniqueInput | prospectosWhereUniqueInput[]
    delete?: prospectosWhereUniqueInput | prospectosWhereUniqueInput[]
    connect?: prospectosWhereUniqueInput | prospectosWhereUniqueInput[]
    update?: prospectosUpdateWithWhereUniqueWithoutEmpresasInput | prospectosUpdateWithWhereUniqueWithoutEmpresasInput[]
    updateMany?: prospectosUpdateManyWithWhereWithoutEmpresasInput | prospectosUpdateManyWithWhereWithoutEmpresasInput[]
    deleteMany?: prospectosScalarWhereInput | prospectosScalarWhereInput[]
  }

  export type serviciosUpdateManyWithoutEmpresasNestedInput = {
    create?: XOR<serviciosCreateWithoutEmpresasInput, serviciosUncheckedCreateWithoutEmpresasInput> | serviciosCreateWithoutEmpresasInput[] | serviciosUncheckedCreateWithoutEmpresasInput[]
    connectOrCreate?: serviciosCreateOrConnectWithoutEmpresasInput | serviciosCreateOrConnectWithoutEmpresasInput[]
    upsert?: serviciosUpsertWithWhereUniqueWithoutEmpresasInput | serviciosUpsertWithWhereUniqueWithoutEmpresasInput[]
    createMany?: serviciosCreateManyEmpresasInputEnvelope
    set?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    disconnect?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    delete?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    connect?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    update?: serviciosUpdateWithWhereUniqueWithoutEmpresasInput | serviciosUpdateWithWhereUniqueWithoutEmpresasInput[]
    updateMany?: serviciosUpdateManyWithWhereWithoutEmpresasInput | serviciosUpdateManyWithWhereWithoutEmpresasInput[]
    deleteMany?: serviciosScalarWhereInput | serviciosScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type prospectosUncheckedUpdateManyWithoutEmpresasNestedInput = {
    create?: XOR<prospectosCreateWithoutEmpresasInput, prospectosUncheckedCreateWithoutEmpresasInput> | prospectosCreateWithoutEmpresasInput[] | prospectosUncheckedCreateWithoutEmpresasInput[]
    connectOrCreate?: prospectosCreateOrConnectWithoutEmpresasInput | prospectosCreateOrConnectWithoutEmpresasInput[]
    upsert?: prospectosUpsertWithWhereUniqueWithoutEmpresasInput | prospectosUpsertWithWhereUniqueWithoutEmpresasInput[]
    createMany?: prospectosCreateManyEmpresasInputEnvelope
    set?: prospectosWhereUniqueInput | prospectosWhereUniqueInput[]
    disconnect?: prospectosWhereUniqueInput | prospectosWhereUniqueInput[]
    delete?: prospectosWhereUniqueInput | prospectosWhereUniqueInput[]
    connect?: prospectosWhereUniqueInput | prospectosWhereUniqueInput[]
    update?: prospectosUpdateWithWhereUniqueWithoutEmpresasInput | prospectosUpdateWithWhereUniqueWithoutEmpresasInput[]
    updateMany?: prospectosUpdateManyWithWhereWithoutEmpresasInput | prospectosUpdateManyWithWhereWithoutEmpresasInput[]
    deleteMany?: prospectosScalarWhereInput | prospectosScalarWhereInput[]
  }

  export type serviciosUncheckedUpdateManyWithoutEmpresasNestedInput = {
    create?: XOR<serviciosCreateWithoutEmpresasInput, serviciosUncheckedCreateWithoutEmpresasInput> | serviciosCreateWithoutEmpresasInput[] | serviciosUncheckedCreateWithoutEmpresasInput[]
    connectOrCreate?: serviciosCreateOrConnectWithoutEmpresasInput | serviciosCreateOrConnectWithoutEmpresasInput[]
    upsert?: serviciosUpsertWithWhereUniqueWithoutEmpresasInput | serviciosUpsertWithWhereUniqueWithoutEmpresasInput[]
    createMany?: serviciosCreateManyEmpresasInputEnvelope
    set?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    disconnect?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    delete?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    connect?: serviciosWhereUniqueInput | serviciosWhereUniqueInput[]
    update?: serviciosUpdateWithWhereUniqueWithoutEmpresasInput | serviciosUpdateWithWhereUniqueWithoutEmpresasInput[]
    updateMany?: serviciosUpdateManyWithWhereWithoutEmpresasInput | serviciosUpdateManyWithWhereWithoutEmpresasInput[]
    deleteMany?: serviciosScalarWhereInput | serviciosScalarWhereInput[]
  }

  export type empresasCreateNestedOneWithoutProspectosInput = {
    create?: XOR<empresasCreateWithoutProspectosInput, empresasUncheckedCreateWithoutProspectosInput>
    connectOrCreate?: empresasCreateOrConnectWithoutProspectosInput
    connect?: empresasWhereUniqueInput
  }

  export type NullableEnumprospectos_statusFieldUpdateOperationsInput = {
    set?: $Enums.prospectos_status | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type empresasUpdateOneRequiredWithoutProspectosNestedInput = {
    create?: XOR<empresasCreateWithoutProspectosInput, empresasUncheckedCreateWithoutProspectosInput>
    connectOrCreate?: empresasCreateOrConnectWithoutProspectosInput
    upsert?: empresasUpsertWithoutProspectosInput
    connect?: empresasWhereUniqueInput
    update?: XOR<XOR<empresasUpdateToOneWithWhereWithoutProspectosInput, empresasUpdateWithoutProspectosInput>, empresasUncheckedUpdateWithoutProspectosInput>
  }

  export type empresasCreateNestedOneWithoutServiciosInput = {
    create?: XOR<empresasCreateWithoutServiciosInput, empresasUncheckedCreateWithoutServiciosInput>
    connectOrCreate?: empresasCreateOrConnectWithoutServiciosInput
    connect?: empresasWhereUniqueInput
  }

  export type empresasUpdateOneRequiredWithoutServiciosNestedInput = {
    create?: XOR<empresasCreateWithoutServiciosInput, empresasUncheckedCreateWithoutServiciosInput>
    connectOrCreate?: empresasCreateOrConnectWithoutServiciosInput
    upsert?: empresasUpsertWithoutServiciosInput
    connect?: empresasWhereUniqueInput
    update?: XOR<XOR<empresasUpdateToOneWithWhereWithoutServiciosInput, empresasUpdateWithoutServiciosInput>, empresasUncheckedUpdateWithoutServiciosInput>
  }

  export type empresasCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<empresasCreateWithoutUsuariosInput, empresasUncheckedCreateWithoutUsuariosInput> | empresasCreateWithoutUsuariosInput[] | empresasUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: empresasCreateOrConnectWithoutUsuariosInput | empresasCreateOrConnectWithoutUsuariosInput[]
    createMany?: empresasCreateManyUsuariosInputEnvelope
    connect?: empresasWhereUniqueInput | empresasWhereUniqueInput[]
  }

  export type empresasUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<empresasCreateWithoutUsuariosInput, empresasUncheckedCreateWithoutUsuariosInput> | empresasCreateWithoutUsuariosInput[] | empresasUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: empresasCreateOrConnectWithoutUsuariosInput | empresasCreateOrConnectWithoutUsuariosInput[]
    createMany?: empresasCreateManyUsuariosInputEnvelope
    connect?: empresasWhereUniqueInput | empresasWhereUniqueInput[]
  }

  export type empresasUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<empresasCreateWithoutUsuariosInput, empresasUncheckedCreateWithoutUsuariosInput> | empresasCreateWithoutUsuariosInput[] | empresasUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: empresasCreateOrConnectWithoutUsuariosInput | empresasCreateOrConnectWithoutUsuariosInput[]
    upsert?: empresasUpsertWithWhereUniqueWithoutUsuariosInput | empresasUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: empresasCreateManyUsuariosInputEnvelope
    set?: empresasWhereUniqueInput | empresasWhereUniqueInput[]
    disconnect?: empresasWhereUniqueInput | empresasWhereUniqueInput[]
    delete?: empresasWhereUniqueInput | empresasWhereUniqueInput[]
    connect?: empresasWhereUniqueInput | empresasWhereUniqueInput[]
    update?: empresasUpdateWithWhereUniqueWithoutUsuariosInput | empresasUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: empresasUpdateManyWithWhereWithoutUsuariosInput | empresasUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: empresasScalarWhereInput | empresasScalarWhereInput[]
  }

  export type empresasUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<empresasCreateWithoutUsuariosInput, empresasUncheckedCreateWithoutUsuariosInput> | empresasCreateWithoutUsuariosInput[] | empresasUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: empresasCreateOrConnectWithoutUsuariosInput | empresasCreateOrConnectWithoutUsuariosInput[]
    upsert?: empresasUpsertWithWhereUniqueWithoutUsuariosInput | empresasUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: empresasCreateManyUsuariosInputEnvelope
    set?: empresasWhereUniqueInput | empresasWhereUniqueInput[]
    disconnect?: empresasWhereUniqueInput | empresasWhereUniqueInput[]
    delete?: empresasWhereUniqueInput | empresasWhereUniqueInput[]
    connect?: empresasWhereUniqueInput | empresasWhereUniqueInput[]
    update?: empresasUpdateWithWhereUniqueWithoutUsuariosInput | empresasUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: empresasUpdateManyWithWhereWithoutUsuariosInput | empresasUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: empresasScalarWhereInput | empresasScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumprospectos_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.prospectos_status | Enumprospectos_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.prospectos_status[] | null
    notIn?: $Enums.prospectos_status[] | null
    not?: NestedEnumprospectos_statusNullableFilter<$PrismaModel> | $Enums.prospectos_status | null
  }

  export type NestedEnumprospectos_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.prospectos_status | Enumprospectos_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.prospectos_status[] | null
    notIn?: $Enums.prospectos_status[] | null
    not?: NestedEnumprospectos_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.prospectos_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumprospectos_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumprospectos_statusNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type usuariosCreateWithoutEmpresasInput = {
    email: string
    password: string
    creado_en?: Date | string | null
  }

  export type usuariosUncheckedCreateWithoutEmpresasInput = {
    id?: number
    email: string
    password: string
    creado_en?: Date | string | null
  }

  export type usuariosCreateOrConnectWithoutEmpresasInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutEmpresasInput, usuariosUncheckedCreateWithoutEmpresasInput>
  }

  export type prospectosCreateWithoutEmpresasInput = {
    nombre: string
    correo?: string | null
    telefono?: string | null
    status?: $Enums.prospectos_status | null
    comentarios?: string | null
    integrantes?: number | null
    creado_en?: Date | string | null
  }

  export type prospectosUncheckedCreateWithoutEmpresasInput = {
    id?: number
    nombre: string
    correo?: string | null
    telefono?: string | null
    status?: $Enums.prospectos_status | null
    comentarios?: string | null
    integrantes?: number | null
    creado_en?: Date | string | null
  }

  export type prospectosCreateOrConnectWithoutEmpresasInput = {
    where: prospectosWhereUniqueInput
    create: XOR<prospectosCreateWithoutEmpresasInput, prospectosUncheckedCreateWithoutEmpresasInput>
  }

  export type prospectosCreateManyEmpresasInputEnvelope = {
    data: prospectosCreateManyEmpresasInput | prospectosCreateManyEmpresasInput[]
    skipDuplicates?: boolean
  }

  export type serviciosCreateWithoutEmpresasInput = {
    nombre: string
    descripcion?: string | null
    imagen_url?: string | null
  }

  export type serviciosUncheckedCreateWithoutEmpresasInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    imagen_url?: string | null
  }

  export type serviciosCreateOrConnectWithoutEmpresasInput = {
    where: serviciosWhereUniqueInput
    create: XOR<serviciosCreateWithoutEmpresasInput, serviciosUncheckedCreateWithoutEmpresasInput>
  }

  export type serviciosCreateManyEmpresasInputEnvelope = {
    data: serviciosCreateManyEmpresasInput | serviciosCreateManyEmpresasInput[]
    skipDuplicates?: boolean
  }

  export type usuariosUpsertWithoutEmpresasInput = {
    update: XOR<usuariosUpdateWithoutEmpresasInput, usuariosUncheckedUpdateWithoutEmpresasInput>
    create: XOR<usuariosCreateWithoutEmpresasInput, usuariosUncheckedCreateWithoutEmpresasInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutEmpresasInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutEmpresasInput, usuariosUncheckedUpdateWithoutEmpresasInput>
  }

  export type usuariosUpdateWithoutEmpresasInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuariosUncheckedUpdateWithoutEmpresasInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type prospectosUpsertWithWhereUniqueWithoutEmpresasInput = {
    where: prospectosWhereUniqueInput
    update: XOR<prospectosUpdateWithoutEmpresasInput, prospectosUncheckedUpdateWithoutEmpresasInput>
    create: XOR<prospectosCreateWithoutEmpresasInput, prospectosUncheckedCreateWithoutEmpresasInput>
  }

  export type prospectosUpdateWithWhereUniqueWithoutEmpresasInput = {
    where: prospectosWhereUniqueInput
    data: XOR<prospectosUpdateWithoutEmpresasInput, prospectosUncheckedUpdateWithoutEmpresasInput>
  }

  export type prospectosUpdateManyWithWhereWithoutEmpresasInput = {
    where: prospectosScalarWhereInput
    data: XOR<prospectosUpdateManyMutationInput, prospectosUncheckedUpdateManyWithoutEmpresasInput>
  }

  export type prospectosScalarWhereInput = {
    AND?: prospectosScalarWhereInput | prospectosScalarWhereInput[]
    OR?: prospectosScalarWhereInput[]
    NOT?: prospectosScalarWhereInput | prospectosScalarWhereInput[]
    id?: IntFilter<"prospectos"> | number
    empresa_id?: IntFilter<"prospectos"> | number
    nombre?: StringFilter<"prospectos"> | string
    correo?: StringNullableFilter<"prospectos"> | string | null
    telefono?: StringNullableFilter<"prospectos"> | string | null
    status?: Enumprospectos_statusNullableFilter<"prospectos"> | $Enums.prospectos_status | null
    comentarios?: StringNullableFilter<"prospectos"> | string | null
    integrantes?: IntNullableFilter<"prospectos"> | number | null
    creado_en?: DateTimeNullableFilter<"prospectos"> | Date | string | null
  }

  export type serviciosUpsertWithWhereUniqueWithoutEmpresasInput = {
    where: serviciosWhereUniqueInput
    update: XOR<serviciosUpdateWithoutEmpresasInput, serviciosUncheckedUpdateWithoutEmpresasInput>
    create: XOR<serviciosCreateWithoutEmpresasInput, serviciosUncheckedCreateWithoutEmpresasInput>
  }

  export type serviciosUpdateWithWhereUniqueWithoutEmpresasInput = {
    where: serviciosWhereUniqueInput
    data: XOR<serviciosUpdateWithoutEmpresasInput, serviciosUncheckedUpdateWithoutEmpresasInput>
  }

  export type serviciosUpdateManyWithWhereWithoutEmpresasInput = {
    where: serviciosScalarWhereInput
    data: XOR<serviciosUpdateManyMutationInput, serviciosUncheckedUpdateManyWithoutEmpresasInput>
  }

  export type serviciosScalarWhereInput = {
    AND?: serviciosScalarWhereInput | serviciosScalarWhereInput[]
    OR?: serviciosScalarWhereInput[]
    NOT?: serviciosScalarWhereInput | serviciosScalarWhereInput[]
    id?: IntFilter<"servicios"> | number
    empresa_id?: IntFilter<"servicios"> | number
    nombre?: StringFilter<"servicios"> | string
    descripcion?: StringNullableFilter<"servicios"> | string | null
    imagen_url?: StringNullableFilter<"servicios"> | string | null
  }

  export type empresasCreateWithoutProspectosInput = {
    nombre: string
    descripcion?: string | null
    logo_url?: string | null
    banner_url?: string | null
    telefono_contacto?: string | null
    correo_contacto?: string | null
    direccion?: string | null
    redes_sociales?: string | null
    sitio_web?: string | null
    creado_en?: Date | string | null
    usuarios: usuariosCreateNestedOneWithoutEmpresasInput
    servicios?: serviciosCreateNestedManyWithoutEmpresasInput
  }

  export type empresasUncheckedCreateWithoutProspectosInput = {
    id?: number
    usuario_id: number
    nombre: string
    descripcion?: string | null
    logo_url?: string | null
    banner_url?: string | null
    telefono_contacto?: string | null
    correo_contacto?: string | null
    direccion?: string | null
    redes_sociales?: string | null
    sitio_web?: string | null
    creado_en?: Date | string | null
    servicios?: serviciosUncheckedCreateNestedManyWithoutEmpresasInput
  }

  export type empresasCreateOrConnectWithoutProspectosInput = {
    where: empresasWhereUniqueInput
    create: XOR<empresasCreateWithoutProspectosInput, empresasUncheckedCreateWithoutProspectosInput>
  }

  export type empresasUpsertWithoutProspectosInput = {
    update: XOR<empresasUpdateWithoutProspectosInput, empresasUncheckedUpdateWithoutProspectosInput>
    create: XOR<empresasCreateWithoutProspectosInput, empresasUncheckedCreateWithoutProspectosInput>
    where?: empresasWhereInput
  }

  export type empresasUpdateToOneWithWhereWithoutProspectosInput = {
    where?: empresasWhereInput
    data: XOR<empresasUpdateWithoutProspectosInput, empresasUncheckedUpdateWithoutProspectosInput>
  }

  export type empresasUpdateWithoutProspectosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_url?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    correo_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    redes_sociales?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarios?: usuariosUpdateOneRequiredWithoutEmpresasNestedInput
    servicios?: serviciosUpdateManyWithoutEmpresasNestedInput
  }

  export type empresasUncheckedUpdateWithoutProspectosInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_url?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    correo_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    redes_sociales?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicios?: serviciosUncheckedUpdateManyWithoutEmpresasNestedInput
  }

  export type empresasCreateWithoutServiciosInput = {
    nombre: string
    descripcion?: string | null
    logo_url?: string | null
    banner_url?: string | null
    telefono_contacto?: string | null
    correo_contacto?: string | null
    direccion?: string | null
    redes_sociales?: string | null
    sitio_web?: string | null
    creado_en?: Date | string | null
    usuarios: usuariosCreateNestedOneWithoutEmpresasInput
    prospectos?: prospectosCreateNestedManyWithoutEmpresasInput
  }

  export type empresasUncheckedCreateWithoutServiciosInput = {
    id?: number
    usuario_id: number
    nombre: string
    descripcion?: string | null
    logo_url?: string | null
    banner_url?: string | null
    telefono_contacto?: string | null
    correo_contacto?: string | null
    direccion?: string | null
    redes_sociales?: string | null
    sitio_web?: string | null
    creado_en?: Date | string | null
    prospectos?: prospectosUncheckedCreateNestedManyWithoutEmpresasInput
  }

  export type empresasCreateOrConnectWithoutServiciosInput = {
    where: empresasWhereUniqueInput
    create: XOR<empresasCreateWithoutServiciosInput, empresasUncheckedCreateWithoutServiciosInput>
  }

  export type empresasUpsertWithoutServiciosInput = {
    update: XOR<empresasUpdateWithoutServiciosInput, empresasUncheckedUpdateWithoutServiciosInput>
    create: XOR<empresasCreateWithoutServiciosInput, empresasUncheckedCreateWithoutServiciosInput>
    where?: empresasWhereInput
  }

  export type empresasUpdateToOneWithWhereWithoutServiciosInput = {
    where?: empresasWhereInput
    data: XOR<empresasUpdateWithoutServiciosInput, empresasUncheckedUpdateWithoutServiciosInput>
  }

  export type empresasUpdateWithoutServiciosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_url?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    correo_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    redes_sociales?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarios?: usuariosUpdateOneRequiredWithoutEmpresasNestedInput
    prospectos?: prospectosUpdateManyWithoutEmpresasNestedInput
  }

  export type empresasUncheckedUpdateWithoutServiciosInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_url?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    correo_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    redes_sociales?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prospectos?: prospectosUncheckedUpdateManyWithoutEmpresasNestedInput
  }

  export type empresasCreateWithoutUsuariosInput = {
    nombre: string
    descripcion?: string | null
    logo_url?: string | null
    banner_url?: string | null
    telefono_contacto?: string | null
    correo_contacto?: string | null
    direccion?: string | null
    redes_sociales?: string | null
    sitio_web?: string | null
    creado_en?: Date | string | null
    prospectos?: prospectosCreateNestedManyWithoutEmpresasInput
    servicios?: serviciosCreateNestedManyWithoutEmpresasInput
  }

  export type empresasUncheckedCreateWithoutUsuariosInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    logo_url?: string | null
    banner_url?: string | null
    telefono_contacto?: string | null
    correo_contacto?: string | null
    direccion?: string | null
    redes_sociales?: string | null
    sitio_web?: string | null
    creado_en?: Date | string | null
    prospectos?: prospectosUncheckedCreateNestedManyWithoutEmpresasInput
    servicios?: serviciosUncheckedCreateNestedManyWithoutEmpresasInput
  }

  export type empresasCreateOrConnectWithoutUsuariosInput = {
    where: empresasWhereUniqueInput
    create: XOR<empresasCreateWithoutUsuariosInput, empresasUncheckedCreateWithoutUsuariosInput>
  }

  export type empresasCreateManyUsuariosInputEnvelope = {
    data: empresasCreateManyUsuariosInput | empresasCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type empresasUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: empresasWhereUniqueInput
    update: XOR<empresasUpdateWithoutUsuariosInput, empresasUncheckedUpdateWithoutUsuariosInput>
    create: XOR<empresasCreateWithoutUsuariosInput, empresasUncheckedCreateWithoutUsuariosInput>
  }

  export type empresasUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: empresasWhereUniqueInput
    data: XOR<empresasUpdateWithoutUsuariosInput, empresasUncheckedUpdateWithoutUsuariosInput>
  }

  export type empresasUpdateManyWithWhereWithoutUsuariosInput = {
    where: empresasScalarWhereInput
    data: XOR<empresasUpdateManyMutationInput, empresasUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type empresasScalarWhereInput = {
    AND?: empresasScalarWhereInput | empresasScalarWhereInput[]
    OR?: empresasScalarWhereInput[]
    NOT?: empresasScalarWhereInput | empresasScalarWhereInput[]
    id?: IntFilter<"empresas"> | number
    usuario_id?: IntFilter<"empresas"> | number
    nombre?: StringFilter<"empresas"> | string
    descripcion?: StringNullableFilter<"empresas"> | string | null
    logo_url?: StringNullableFilter<"empresas"> | string | null
    banner_url?: StringNullableFilter<"empresas"> | string | null
    telefono_contacto?: StringNullableFilter<"empresas"> | string | null
    correo_contacto?: StringNullableFilter<"empresas"> | string | null
    direccion?: StringNullableFilter<"empresas"> | string | null
    redes_sociales?: StringNullableFilter<"empresas"> | string | null
    sitio_web?: StringNullableFilter<"empresas"> | string | null
    creado_en?: DateTimeNullableFilter<"empresas"> | Date | string | null
  }

  export type prospectosCreateManyEmpresasInput = {
    id?: number
    nombre: string
    correo?: string | null
    telefono?: string | null
    status?: $Enums.prospectos_status | null
    comentarios?: string | null
    integrantes?: number | null
    creado_en?: Date | string | null
  }

  export type serviciosCreateManyEmpresasInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    imagen_url?: string | null
  }

  export type prospectosUpdateWithoutEmpresasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumprospectos_statusFieldUpdateOperationsInput | $Enums.prospectos_status | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    integrantes?: NullableIntFieldUpdateOperationsInput | number | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type prospectosUncheckedUpdateWithoutEmpresasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumprospectos_statusFieldUpdateOperationsInput | $Enums.prospectos_status | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    integrantes?: NullableIntFieldUpdateOperationsInput | number | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type prospectosUncheckedUpdateManyWithoutEmpresasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableEnumprospectos_statusFieldUpdateOperationsInput | $Enums.prospectos_status | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    integrantes?: NullableIntFieldUpdateOperationsInput | number | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type serviciosUpdateWithoutEmpresasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type serviciosUncheckedUpdateWithoutEmpresasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type serviciosUncheckedUpdateManyWithoutEmpresasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    imagen_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type empresasCreateManyUsuariosInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    logo_url?: string | null
    banner_url?: string | null
    telefono_contacto?: string | null
    correo_contacto?: string | null
    direccion?: string | null
    redes_sociales?: string | null
    sitio_web?: string | null
    creado_en?: Date | string | null
  }

  export type empresasUpdateWithoutUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_url?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    correo_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    redes_sociales?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prospectos?: prospectosUpdateManyWithoutEmpresasNestedInput
    servicios?: serviciosUpdateManyWithoutEmpresasNestedInput
  }

  export type empresasUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_url?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    correo_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    redes_sociales?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    prospectos?: prospectosUncheckedUpdateManyWithoutEmpresasNestedInput
    servicios?: serviciosUncheckedUpdateManyWithoutEmpresasNestedInput
  }

  export type empresasUncheckedUpdateManyWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    logo_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_url?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    correo_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    redes_sociales?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}